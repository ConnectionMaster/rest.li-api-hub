# Play Configuration #########################

#include "defaults"
include "concat"

application.global=Global

# Application name
application.name=apihub

# Context path for your application
application.context = "/apihub"

application.log=INFO

application.secret=PUT_YOUR_SECRET_HERE

# disable stuff we don't need
play-i18n-dynamic-resource-enable=false

# Application Configuration ##################

# EDIT ME!  To get started, please adjust the below "data loader strategy" configuration properties.
# The data load strategy determines how this application will discover resources and gather their interface definition data
# such that they are included in the UI and can be searched.
#
# First, Comment out the below two configuration settings.  They simply load data from a test resource file.

dataLoadStrategy=resource
filesystemCacheDir=int-test-dataset.json

# Next, enable the below configuration settings.  Replacing the resourceUrls with a list of urls to your rest.li resources.

#dataLoadStrategy=crawlerFilesystemCached
#filesystemCacheDir=PUT_THE_TEMP_DIRECTORY_YOU_WANT_TO_USE_FOR_CACHING_HERE
#resourceUrls=[
#  "http://domain/resource",
#  "http://domain/resource2"
#]

# Here's an example:
# This example uses a rest.li's test resources, to use, first run the rest.li int-test-server, e.g.:  cd rest.li && gradle startServer
#dataLoadStrategy=crawlerFilesystemCached
#filesystemCacheDir=/tmp/apihub
#resourceUrls=[
#  "http://localhost:1338/greetings",
#  "http://localhost:1338/actions",
#  "http://localhost:1338/associations",
#  "http://localhost:1338/complexKeys",
#  "http://localhost:1338/customTypes"
#]

# documentation links
docLinks=[
  { name="Rest.li User Guide", url="https://github.com/linkedin/rest.li/wiki/Rest.li-User-Guide" }
]

# enables the console that can be used to execute http requests against resources from the UI
consoleEnabled=true

# example uploaded permlink: http://localhost:9000/apihub/apis/permlink:9611047/complexKeys
# note that this simply reads data from: https://gist.github.com/anonymous/9611047

# curl command to use for making sample requests to your service
curlCommand = "curl"

##############################################