{
    "clusters": {
        "UscpBackend": {
            "name": "UscpBackend", 
            "servers": [
                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
            ], 
            "services": [
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "activityHidesBackend", 
                    "path": "/activityHides", 
                    "protocol": "REST"
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "activityCommentsBackend", 
                    "path": "/activityComments", 
                    "protocol": "REST"
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "threadsBackend", 
                    "models": {
                        "com.linkedin.ucp.Activity": "{ \"type\" : \"record\", \"name\" : \"Activity\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents a raw activity to be published\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"VersionTag\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"A resource-defined string representing the resource state for the purpose of concurrency control\", \"fields\" : [ { \"name\" : \"versionTag\", \"type\" : \"string\", \"optional\" : true } ] } ], \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\", \"doc\" : \"The predefined activity id (used for NUS migration only).\", \"optional\" : true }, { \"name\" : \"actor\", \"type\" : \"string\", \"doc\" : \"An old urn referencing the actor of the activity.\" }, { \"name\" : \"actorUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing the actor of the activity.\", \"optional\" : true, \"derived-from\" : \"actor\" }, { \"name\" : \"verb\", \"type\" : { \"type\" : \"record\", \"name\" : \"Verb\", \"doc\" : \"Activity verb data\", \"fields\" : [ { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered verb.\" }, { \"name\" : \"commentary\", \"type\" : \"string\", \"doc\" : \"Optional field representing the actor's commentary about this activity, if applicable.\", \"optional\" : true }, { \"name\" : \"commentaryAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of verb commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : \"com.linkedin.common.AnyRecord\", \"doc\" : \"Map of custom property key/values\", \"optional\" : true } ] }, \"doc\" : \"The verb of the activity and it's context (commentary and attributes).\" }, { \"name\" : \"object\", \"type\" : \"ObjectSummary\", \"doc\" : \"Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url) of the object.\", \"default\" : { \"locale\" : \"en_US\" }, \"optional\" : true }, { \"name\" : \"target\", \"type\" : \"ObjectSummary\", \"doc\" : \"A urn referencing larger collection/container the 'object' is part of.  When present, the statement becomes <actor> <verb> <object> to/in/preposition <target>.  E.g. Bob posted a movie review for Inception.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\", \"doc\" : \"A urn referencing the application that published the activity.\" }, { \"name\" : \"spaces\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"The spaces in which the update is tagged; for example, you can tag an update as belonging to a members feed\", \"optional\" : true }, { \"name\" : \"visibility\", \"type\" : { \"type\" : \"record\", \"name\" : \"ActivityVisibility\", \"doc\" : \"Represents the access control rules for a given update\", \"fields\" : [ { \"name\" : \"public\", \"type\" : \"boolean\", \"doc\" : \"Global flag which indicates that this update is globally visibile\", \"default\" : false, \"optional\" : true }, { \"name\" : \"network\", \"type\" : { \"type\" : \"enum\", \"name\" : \"NetworkVisibility\", \"symbols\" : [ \"CONNECTIONS\", \"SECOND_DEGREE\" ] }, \"doc\" : \"Permit a given network access to this update; the actor for this update must be a LinkedIn member\", \"optional\" : true }, { \"name\" : \"include\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Permits a list of supported entities access to this update\", \"optional\" : true }, { \"name\" : \"exclude\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Overrides all previous rules to exclude access for a set of supported entities\", \"optional\" : true } ] }, \"doc\" : \"Visibility attached to this activity.  Explicitly sets the access control rules for this activity.\", \"default\" : { \"public\" : false } }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"keywords\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Search keywords relevant to this activity.\", \"optional\" : true }, { \"name\" : \"validAfter\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is first valid.  The activity will not be displayed until this time.\", \"optional\" : true }, { \"name\" : \"validUntil\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is last valid.  The activity will not be diplayed after this time.\", \"optional\" : true }, { \"name\" : \"actions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityAction\", \"doc\" : \"A call to action\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"URL the viewer will navigate to when they take this action.\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"English label for this action\" }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"This is the canonical representation of this action that will not be used in i18n\", \"optional\" : true }, { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"This can be used as an i18n resource key\", \"optional\" : true } ] } }, \"doc\" : \"A urn referencing a activity specific action to be included with the actions displayed in addition to the standard actions.\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Locale\", \"default\" : { \"language\" : \"en\" } }, { \"name\" : \"useObjectIdAsThreadId\", \"type\" : \"boolean\", \"doc\" : \"For comments on this activity, this flag indicates if the object Id should be the thread Id or the activity id itself should be used as the thread Id.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"sponsored\", \"type\" : \"boolean\", \"doc\" : \"Indicates that the activity is paid for by a sponsor.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"trackingMetadata\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Map of additional metadata used for client tracking. Entry key is tracking source. Entry value can be used to send webtrack events.\", \"optional\" : true }, { \"name\" : \"topicScores\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Topics associated with the object and a score on a [0..1] scale.  May be rounder if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"nusReputationScore\", \"type\" : \"float\", \"doc\" : \"Reputation score for this event's actor, 0.0 if one was not assigned to the actor of this event.\", \"default\" : 0.0, \"optional\" : true }, { \"name\" : \"deduplicationMetadata\", \"type\" : { \"type\" : \"record\", \"name\" : \"DeduplicationMetadata\", \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"fields\" : [ { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"A unique key to which all events satisfying the same de-duplication criteria are mapped.\", \"optional\" : true }, { \"name\" : \"category\", \"type\" : { \"type\" : \"enum\", \"name\" : \"DeduplicationCategory\", \"doc\" : \"Whether, within the same de-duplication group (identified by a common key), this event should be prioritized for being filtered out. ACTIVE events are always preferred over PASSIVE events, but with multiple ACTIVE events whichever event comes first will be preferred.\", \"symbols\" : [ \"ACTIVE\", \"PASSIVE\" ] }, \"optional\" : true } ] }, \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"optional\" : true } ], \"version\" : 10 }", 
                        "com.linkedin.ucp.social.Comment": "{ \"type\" : \"record\", \"name\" : \"Comment\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"A comment object\", \"deprecated\": \"Message for deprecated comment type.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\", \"deprecated\":\"Message for deprecated id field.\" }, { \"name\" : \"threadId\", \"type\" : \"string\", \"deprecated\":true, \"doc\" : \"The root-level object/activity for the comment. For threaded comments, this is the ID of the root of the thread\" }, { \"name\" : \"threadAuthorId\", \"type\" : \"string\", \"doc\" : \"Author Id of the activity which this comment belongs to, used by anti-spam engine \", \"optional\" : true }, { \"name\" : \"parentCommentId\", \"type\" : \"long\", \"doc\" : \"For nested comments, this is the id of the parent comment. This will be 0 for first-level comments\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"pathToRoot\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Contains the parent hierarchy. For top-level comments, this is just the threadId\", \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"level\", \"type\" : \"int\", \"doc\" : \"Nesting level for the comment. Top-level comments have this set to 1 and so on\", \"default\" : 1, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\" }, { \"name\" : \"commenterId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"commenterUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"optional\" : true, \"derived-from\" : \"commenterId\" }, { \"name\" : \"commenter\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"optional\" : true }, { \"name\" : \"message\", \"type\" : \"string\", \"doc\" : \"Stores the comment message.\" }, { \"name\" : \"messageAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : \"ObjectSummary\", \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"objects\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"doc\" : \"Allows attachment of rich objects to comments.\", \"optional\" : true }, { \"name\" : \"likes\", \"type\" : { \"type\" : \"record\", \"name\" : \"VerbSocialSummary\", \"doc\" : \"Summary of the social gestures for a given verb\", \"fields\" : [ { \"name\" : \"total\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recent\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"actedOnByCurrentUser\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true } ] } }, { \"name\" : \"spam\", \"type\" : { \"type\" : \"record\", \"name\" : \"Spam\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Spam information\", \"fields\" : [ { \"name\" : \"state\", \"type\" : \"boolean\", \"doc\" : \"State is true if this is a spam, false otherwise\", \"default\" : false }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if an the decision is by an admin user, false otherwise\", \"default\" : false }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"Type of spam, such as job, event, etc\", \"default\" : \"none\" }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the spam, either classifier or a particular admin member id\", \"default\" : \"classifier\" } ] }, \"optional\" : true }, { \"name\" : \"markedAsSpam\", \"type\" : \"boolean\", \"doc\" : \"used to mark the comment as spam\", \"default\" : false, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"flags\", \"type\" : \"VerbSocialSummary\", \"optional\" : true }, { \"name\" : \"active\", \"type\" : \"boolean\", \"doc\" : \"used to soft-delete the comment\", \"default\" : true }, { \"name\" : \"deletedBy\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\", \"indexType\" : \"attribute\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"urn\", \"type\" : \"string\", \"doc\" : \"The old URN reference for this comment.\" }, { \"name\" : \"urnStd\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"The standard URN reference for this comment.\", \"optional\" : true, \"derived-from\" : \"urn\" }, { \"name\" : \"relativePosition\", \"type\" : \"int\" }, { \"name\" : \"totalFirstLevelComments\", \"type\" : \"int\", \"doc\" : \"Number of first-level comments on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"doc\" : \"Number of likes on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"aggregatedTotalLikes\", \"type\" : \"int\", \"doc\" : \"Total number of likes on this comment, including multi-level nested comments. Populated only for comments with level=1\", \"default\" : 0, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"nestedComments\", \"type\" : { \"type\" : \"array\", \"items\" : \"Comment\" }, \"doc\" : \"Comments nested within this comment. Only a configurable number of recent nested comments are always returned. The return value from the USCP comment API may include all or a different partial set of nested comments depending on the API request parameters\", \"default\" : [  ], \"optional\" : true } ], \"version\" : 16 }",
                        "com.linkedin.ucp.social.CommentSortOrder": "{ \"type\" : \"enum\", \"name\" : \"CommentSortOrder\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"Sort order for comments\", \"symbols\" : [ \"CHRON\", \"REV_CHRON\", \"POPULAR\" ], \"deprecatedSymbols\":{ \"POPULAR\": \"Deprecated Message for the POPULAR enum value.\"} }",
                        "com.linkedin.ucp.social.CommentThread": "{ \"type\" : \"record\", \"name\" : \"CommentThread\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"A thread object\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\" }, { \"name\" : \"urn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"ownerId\", \"type\" : \"string\" }, { \"name\" : \"ownerUrn\", \"type\" : \"com.linkedin.common.Urn\", \"optional\" : true, \"derived-from\" : \"ownerId\" }, { \"name\" : \"state\", \"type\" : { \"type\" : \"enum\", \"name\" : \"ThreadState\", \"symbols\" : [ \"OPEN\", \"CLOSED\", \"DELETED\" ] }, \"default\" : \"OPEN\", \"optional\" : true }, { \"name\" : \"totalComments\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recentComments\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Comment\", \"doc\" : \"A comment object\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\" }, { \"name\" : \"threadId\", \"type\" : \"string\", \"doc\" : \"The root-level object/activity for the comment. For threaded comments, this is the ID of the root of the thread\" }, { \"name\" : \"threadAuthorId\", \"type\" : \"string\", \"doc\" : \"Author Id of the activity which this comment belongs to, used by anti-spam engine \", \"optional\" : true }, { \"name\" : \"parentCommentId\", \"type\" : \"long\", \"doc\" : \"For nested comments, this is the id of the parent comment. This will be 0 for first-level comments\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"pathToRoot\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Contains the parent hierarchy. For top-level comments, this is just the threadId\", \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"level\", \"type\" : \"int\", \"doc\" : \"Nesting level for the comment. Top-level comments have this set to 1 and so on\", \"default\" : 1, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\" }, { \"name\" : \"commenterId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"commenterUrn\", \"type\" : \"com.linkedin.common.Urn\", \"optional\" : true, \"derived-from\" : \"commenterId\" }, { \"name\" : \"commenter\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"optional\" : true }, { \"name\" : \"message\", \"type\" : \"string\", \"doc\" : \"Stores the comment message.\" }, { \"name\" : \"messageAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : \"ObjectSummary\", \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"objects\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"doc\" : \"Allows attachment of rich objects to comments.\", \"optional\" : true }, { \"name\" : \"likes\", \"type\" : { \"type\" : \"record\", \"name\" : \"VerbSocialSummary\", \"doc\" : \"Summary of the social gestures for a given verb\", \"fields\" : [ { \"name\" : \"total\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recent\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"actedOnByCurrentUser\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true } ] } }, { \"name\" : \"spam\", \"type\" : { \"type\" : \"record\", \"name\" : \"Spam\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Spam information\", \"fields\" : [ { \"name\" : \"state\", \"type\" : \"boolean\", \"doc\" : \"State is true if this is a spam, false otherwise\", \"default\" : false }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if an the decision is by an admin user, false otherwise\", \"default\" : false }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"Type of spam, such as job, event, etc\", \"default\" : \"none\" }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the spam, either classifier or a particular admin member id\", \"default\" : \"classifier\" } ] }, \"optional\" : true }, { \"name\" : \"markedAsSpam\", \"type\" : \"boolean\", \"doc\" : \"used to mark the comment as spam\", \"default\" : false, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"flags\", \"type\" : \"VerbSocialSummary\", \"optional\" : true }, { \"name\" : \"active\", \"type\" : \"boolean\", \"doc\" : \"used to soft-delete the comment\", \"default\" : true }, { \"name\" : \"deletedBy\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\", \"indexType\" : \"attribute\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"urn\", \"type\" : \"string\", \"doc\" : \"The old URN reference for this comment.\" }, { \"name\" : \"urnStd\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"The standard URN reference for this comment.\", \"optional\" : true, \"derived-from\" : \"urn\" }, { \"name\" : \"relativePosition\", \"type\" : \"int\" }, { \"name\" : \"totalFirstLevelComments\", \"type\" : \"int\", \"doc\" : \"Number of first-level comments on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"doc\" : \"Number of likes on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"aggregatedTotalLikes\", \"type\" : \"int\", \"doc\" : \"Total number of likes on this comment, including multi-level nested comments. Populated only for comments with level=1\", \"default\" : 0, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"nestedComments\", \"type\" : { \"type\" : \"array\", \"items\" : \"Comment\" }, \"doc\" : \"Comments nested within this comment. Only a configurable number of recent nested comments are always returned. The return value from the USCP comment API may include all or a different partial set of nested comments depending on the API request parameters\", \"default\" : [  ], \"optional\" : true } ], \"version\" : 16 } }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\" }, { \"name\" : \"lastCommentedDate\", \"type\" : \"long\" }, { \"name\" : \"numCommentsEverCreated\", \"type\" : \"int\", \"doc\" : \"Number of top-level comments created under this thread\" }, { \"name\" : \"numSpamComments\", \"type\" : \"int\", \"doc\" : \"Number of top-level comments that have been marked as spam under this thread. Not used anymore\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"additionalParameters\", \"type\" : \"com.linkedin.common.AnyRecord\", \"optional\" : true } ], \"version\" : 17 }", 
                        "com.linkedin.ucp.social.Like": "{ \"type\" : \"record\", \"name\" : \"Like\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"A 'like' (recommendation) object. This is a lightweight association between an actor and the recommended item e.g. an 'edge' in the 'interest graph'\", \"fields\" : [ { \"name\" : \"actorId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"actorUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"optional\" : true, \"derived-from\" : \"actorId\" }, { \"name\" : \"objectId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"objectUrn\", \"type\" : \"com.linkedin.common.Urn\", \"optional\" : true, \"derived-from\" : \"objectId\" }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"actor\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"optional\" : true }, { \"name\" : \"active\", \"type\" : \"boolean\", \"default\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"level\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"pathToRoot\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Contains the parent hierarchy.\", \"optional\" : true, \"indexType\" : \"attribute\" } ], \"version\" : 8 }"
                    },
                    "path": "/threads", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "annotations" : {
                          "deprecated" : {
                            "doc" : "This is a deprecation documentation string for a resource."
                          }
                        },
                        "collection": {
                            "entity": {
                                "actions": [
                                    {
                                        "annotations" : {
                                          "deprecated" : {
                                            "doc" : "This is a deprecation documentation string for an action."
                                          }
                                        },
                                        "doc": "Lock a thread.  No new comments will be allowed in this thread.", 
                                        "name": "lock"
                                    }, 
                                    {
                                        "annotations" : {
                                          "testMethod" : {
                                            "doc" : "This is a test method documentation string for an action."
                                          }
                                        },
                                        "doc": "Unlock a thread.  Allows new comments to be added to this thread.", 
                                        "name": "unlock"
                                    }
                                ], 
                                "path": "/threads/{threadId}", 
                                "subresources": [
                                    {
                                        "collection": {
                                            "actions": [
                                                {
                                                    "doc": "Create the comment and publish a corresponding viral activity for specified comment.\n The generated activity will use the commenter as the actor, \"linkedin:comment\" as the\n verb, and the threadID as the object.", 
                                                    "name": "createCommentAndPublishActivity", 
                                                    "parameters": [
                                                        {
                                                            "name": "comment", 
                                                            "type": "com.linkedin.ucp.social.Comment"
                                                        }
                                                    ], 
                                                    "returns": "string"
                                                }
                                            ], 
                                            "entity": {
                                                "actions": [
                                                    {
                                                        "doc": "Create a corresponding viral activity for specified comment.  The generated activity will use the commenter as the\n actor, \"linkedin:comment\" as the verb, and the threadID as the object.\n\n This does not work without read after write consistency in Espresso", 
                                                        "name": "createCommentActivity", 
                                                        "returns": "com.linkedin.ucp.Activity"
                                                    }, 
                                                    {
                                                        "name": "flag", 
                                                        "parameters": [
                                                            {
                                                                "name": "actorId", 
                                                                "type": "string"
                                                            }, 
                                                            {
                                                                "default": "none", 
                                                                "name": "reason", 
                                                                "type": "string"
                                                            }
                                                        ], 
                                                        "returns": "com.linkedin.ucp.social.Comment"
                                                    }, 
                                                    {
                                                        "doc": "Mark the spam field of a comment. state is true if it is a spam; false otherwise.\n admin is true if this is an admin operation, false otherwise. type is the type of\n spam, such as \"JOB\", \"EVENT\", etc", 
                                                        "name": "markspam", 
                                                        "parameters": [
                                                            {
                                                                "name": "state", 
                                                                "type": "boolean"
                                                            }, 
                                                            {
                                                                "default": "true", 
                                                                "name": "admin", 
                                                                "type": "boolean"
                                                            }, 
                                                            {
                                                                "default": "none", 
                                                                "name": "type", 
                                                                "type": "string"
                                                            }, 
                                                            {
                                                                "name": "reporter", 
                                                                "type": "string"
                                                            }
                                                        ], 
                                                        "returns": "com.linkedin.ucp.social.Comment"
                                                    }, 
                                                    {
                                                        "name": "unflag", 
                                                        "parameters": [
                                                            {
                                                                "name": "actorId", 
                                                                "type": "string"
                                                            }
                                                        ], 
                                                        "returns": "com.linkedin.ucp.social.Comment"
                                                    }, 
                                                    {
                                                        "name": "unmention", 
                                                        "parameters": [
                                                            {
                                                                "name": "actorUrn", 
                                                                "type": "string"
                                                            }
                                                        ]
                                                    }
                                                ], 
                                                "path": "/threads/{threadId}/comments/{commentId}", 
                                                "subresources": [
                                                    {
                                                        "collection": {
                                                            "entity": {
                                                                "path": "/threads/{threadId}/comments/{commentId}/likes/{actorId}"
                                                            }, 
                                                            "finders": [
                                                                {
                                                                    "doc": "Finds all the likes of this comment.", 
                                                                    "name": "all"
                                                                }
                                                            ], 
                                                            "identifier": {
                                                                "name": "actorId", 
                                                                "type": "string"
                                                            }, 
                                                            "methods": [
                                                                {
                                                                    "doc": "If the actor has liked the comment, responds with details about that like, otherwise responds with a 404.", 
                                                                    "method": "get"
                                                                }, 
                                                                {
                                                                    "doc": "Update the like against a comment for the given actor. This really performs the\n function of creating a comment like", 
                                                                    "method": "update"
                                                                }, 
                                                                {
                                                                    "doc": "Unlikes a comment for an actor.", 
                                                                    "method": "delete"
                                                                }, 
                                                                {
                                                                    "doc": "Responds with likes for the actors from the given set that have liked this comment.", 
                                                                    "method": "batch_get"
                                                                }
                                                            ], 
                                                            "supports": [
                                                                "batch_get", 
                                                                "delete", 
                                                                "get", 
                                                                "update"
                                                            ]
                                                        }, 
                                                        "doc": "Sub-resource of comments containing likes taken on the comment by a given actor.\n When likes are added to comments, recent likes will be demormalized into the comment's recent likes.\n\ngenerated from: com.linkedin.ucp.comment.rest.CommentLikesResource", 
                                                        "name": "likes", 
                                                        "namespace": "com.linkedin.ucp.comment.client", 
                                                        "path": "/threads/{threadId}/comments/{commentId}/likes", 
                                                        "schema": "com.linkedin.ucp.social.Like"
                                                    }
                                                ]
                                            }, 
                                            "finders": [
                                                {
                                                    "doc": "Gets all the comments for the thread using backing store's default sort order.\n\n Warn: this is not appropriate for most use cases, use 'list' for a meaningful sort order.", 
                                                    "name": "all", 
                                                    "parameters": [
                                                        {
                                                            "default": "member:0", 
                                                            "doc": "URN of viewer, used for spam filtering", 
                                                            "name": "viewerId", 
                                                            "type": "string"
                                                        }, 
                                                        {
                                                            "default": "0", 
                                                            "doc": "thinking of a nested comment thread as a tree, the sub-tree under the comment to be searched", 
                                                            "name": "parentCommentId", 
                                                            "type": "long"
                                                        }, 
                                                        {
                                                            "default": "0", 
                                                            "doc": "the earliest timestamp of creation for a comment", 
                                                            "name": "minCreationTime", 
                                                            "type": "long"
                                                        }, 
                                                        {
                                                            "default": "0", 
                                                            "doc": "the latest timestamp of creation for a comment", 
                                                            "name": "maxCreationTime", 
                                                            "type": "long"
                                                        }
                                                    ]
                                                }, 
                                                {
                                                    "doc": "Gets all the comments for the thread sorted by the given sort order, or in chronological order if no sort order is given.", 
                                                    "name": "list", 
                                                    "parameters": [
                                                        {
                                                            "doc": "Sort order preference, see {@link CommentSortOrder} for all available options, defaul to chronological order.", 
                                                            "name": "sort", 
                                                            "type": "com.linkedin.ucp.social.CommentSortOrder"
                                                        }, 
                                                        {
                                                            "default": "member:0", 
                                                            "doc": "URN of viewer, used for spam filtering", 
                                                            "name": "viewerId", 
                                                            "type": "string"
                                                        }, 
                                                        {
                                                            "default": "false", 
                                                            "name": "includeSpam", 
                                                            "type": "boolean"
                                                        }, 
                                                        {
                                                            "default": "0", 
                                                            "doc": "thinking of a nested comment thread as a tree, the sub-tree under the comment to be searched", 
                                                            "name": "parentCommentId", 
                                                            "type": "long"
                                                        }, 
                                                        {
                                                            "default": "0", 
                                                            "doc": "the earliest timestamp of creation for a comment", 
                                                            "name": "minCreationTime", 
                                                            "type": "long"
                                                        }, 
                                                        {
                                                            "default": "0", 
                                                            "doc": "the latest timestamp of creation for a comment", 
                                                            "name": "maxCreationTime", 
                                                            "type": "long"
                                                        }
                                                    ]
                                                }
                                            ], 
                                            "identifier": {
                                                "name": "commentId", 
                                                "type": "long"
                                            }, 
                                            "methods": [
                                                {
                                                    "doc": "Posts a comment to a thread.", 
                                                    "method": "create"
                                                }, 
                                                {
                                                    "doc": "Gets a comment from the thread.", 
                                                    "method": "get", 
                                                    "parameters": [
                                                        {
                                                            "default": "member:0", 
                                                            "name": "viewerId", 
                                                            "type": "string"
                                                        }
                                                    ]
                                                }, 
                                                {
                                                    "doc": "Deletes a comment from a thread.", 
                                                    "method": "delete"
                                                }, 
                                                {
                                                    "doc": "Batch gets a set of comments.  Key of results is URN.", 
                                                    "method": "batch_get", 
                                                    "parameters": [
                                                        {
                                                            "default": "member:0", 
                                                            "name": "viewerId", 
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            ], 
                                            "supports": [
                                                "batch_get", 
                                                "create", 
                                                "delete", 
                                                "get"
                                            ]
                                        }, 
                                        "doc": "Collection of comments on a thread.\n\n A thread for a URN is created automatically when the first comment is posted against that URN.\n\ngenerated from: com.linkedin.ucp.comment.rest.CommentsResource", 
                                        "name": "comments",
                                        "namespace": "com.linkedin.ucp.comment.client", 
                                        "path": "/threads/{threadId}/comments", 
                                        "schema": "com.linkedin.ucp.social.Comment"
                                    }
                                ]
                            }, 
                            "identifier": {
                                "name": "threadId", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "annotations" : {
                                      "deprecated" : {
                                        "doc" : "This is a deprecation documentation string for a get method."
                                      }
                                    },
                                    "doc": "Gets a thread summary including its recent comments.\n viewerId must be passed if spam filtering is required", 
                                    "method": "get", 
                                    "parameters": [
                                        {
                                            "default": "member:0", 
                                            "name": "viewerId", 
                                            "type": "string"
                                        }
                                    ]
                                }, 
                                {
                                    "doc": "Deletes an entire thread.", 
                                    "method": "delete"
                                }, 
                                {
                                    "doc": "Gets thread summaries, including recent comments for each thread.\n viewerId must be passed if spam filtering is required", 
                                    "method": "batch_get", 
                                    "parameters": [
                                        {
                                            "default": "member:0", 
                                            "name": "viewerId", 
                                            "type": "string"
                                        }
                                    ]
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "delete", 
                                "get"
                            ]
                        }, 
                        "doc": "A collection of threads.\n\n As a convention a thread should be identified by the URN of the entity being commented on.\n\n A thread  is created automatically when the first comment is posted against it.\n\ngenerated from: com.linkedin.ucp.comment.rest.ThreadsResource", 
                        "name": "threads", 
                        "namespace": "com.linkedin.ucp.comment.client", 
                        "path": "/threads", 
                        "schema": "com.linkedin.ucp.social.CommentThread"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "uscpContentRecommendations", 
                    "models": {
                        "com.linkedin.ucp.RecommenderInput": "{ \"type\" : \"record\", \"name\" : \"RecommenderInput\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"First-pass ranker input parameters\", \"fields\" : [ { \"name\" : \"viewer\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"member for whom the recommendations should be generated\" }, { \"name\" : \"about\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.common.Urn\" }, \"doc\" : \"urn to make recommendations for (i.e. skill urn for H2O topic page recommendations or member urn for NUS recommendations)\" }, { \"name\" : \"pageKey\", \"type\" : \"string\", \"doc\" : \"frontend pagination key\" }, { \"name\" : \"paginationKey\", \"type\" : \"string\", \"doc\" : \"recommender pagination key\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"locale of the viewer, e.g., 'en_US'\", \"optional\" : true }, { \"name\" : \"customParameters\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"ranker-specific parameters that can be populated based on federator metadata\", \"optional\" : true } ] }", 
                        "com.linkedin.ucp.RecommenderMetadata": "{ \"type\" : \"record\", \"name\" : \"RecommenderMetadata\", \"namespace\" : \"com.linkedin.ucp\", \"fields\" : [ { \"name\" : \"ranker\", \"type\" : \"string\", \"doc\" : \"Name of the first-pass ranker which produced the results.\" }, { \"name\" : \"model\", \"type\" : \"string\", \"doc\" : \"Name of the first-pass ranker's internal model which was used to produce the results.\", \"optional\" : true }, { \"name\" : \"input\", \"type\" : { \"type\" : \"record\", \"name\" : \"RecommenderInput\", \"doc\" : \"First-pass ranker input parameters\", \"fields\" : [ { \"name\" : \"viewer\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"member for whom the recommendations should be generated\" }, { \"name\" : \"about\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.common.Urn\" }, \"doc\" : \"urn to make recommendations for (i.e. skill urn for H2O topic page recommendations or member urn for NUS recommendations)\" }, { \"name\" : \"pageKey\", \"type\" : \"string\", \"doc\" : \"frontend pagination key\" }, { \"name\" : \"paginationKey\", \"type\" : \"string\", \"doc\" : \"recommender pagination key\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"locale of the viewer, e.g., 'en_US'\", \"optional\" : true }, { \"name\" : \"customParameters\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"ranker-specific parameters that can be populated based on federator metadata\", \"optional\" : true } ] }, \"doc\" : \"echoed input parameters: for tracking and debugging\" }, { \"name\" : \"groupMetaData\", \"type\" : { \"type\" : \"map\", \"values\" : { \"type\" : \"record\", \"name\" : \"GroupInfo\", \"doc\" : \"Group info which includes count and aggregation type.\", \"fields\" : [ { \"name\" : \"total\", \"type\" : \"long\", \"doc\" : \"Total number of entities in a group. This may not be equal to the number of results retured.\" }, { \"name\" : \"aggregationType\", \"type\" : \"string\", \"doc\" : \"Type by which group was aggregated. These values are specific to each recommender implementation.\" } ] } }, \"doc\" : \"Metadata associated with the group. This is a map where key is groupId and value is a record which contains metadata for that group\", \"optional\" : true }, { \"name\" : \"paginationKey\", \"type\" : \"string\", \"doc\" : \"Pagination key for recommender model\", \"optional\" : true }, { \"name\" : \"additionalMetadata\", \"type\" : { \"type\" : \"record\", \"name\" : \"CustomPropertiesWrapper\", \"doc\" : \"Empty placeholder schema for now, waiting for an *any* type from Pegasus.\", \"fields\" : [  ] }, \"doc\" : \"Additional metadata returned by FPRs (right now used by USCP to return facet count)\", \"optional\" : true } ] }", 
                        "com.linkedin.ucp.RecommenderResult": "{ \"type\" : \"record\", \"name\" : \"RecommenderResult\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"First-pass ranker result\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"ScoredEntity\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Represents an entity with a score, such as from a search, recommendation system, or the output of a classifier.\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"The id of the entity.\" }, { \"name\" : \"score\", \"type\" : \"float\", \"doc\" : \"The score of the entity. The interpretation of the score may vary by API.\" } ] } ], \"fields\" : [ { \"name\" : \"entityRepresentation\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"materialized entity representation. This may be provided by the first pass ranker that returns the scored entity. If not, the federator will create an entity representation based on a recommender-specific EntityResolver.\", \"optional\" : true }, { \"name\" : \"groupId\", \"type\" : \"string\", \"doc\" : \"If FPR wants to aggregate the results, then aggregation is specified by supplying same groupId to aggregated entities\", \"optional\" : true } ] }"
                    }, 
                    "path": "/recommender", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "path": "/recommender/{recommenderId}"
                            }, 
                            "finders": [
                                {
                                    "metadata": {
                                        "type": "com.linkedin.ucp.RecommenderMetadata"
                                    }, 
                                    "name": "recommend", 
                                    "parameters": [
                                        {
                                            "name": "query", 
                                            "type": "com.linkedin.ucp.RecommenderInput"
                                        }
                                    ]
                                }
                            ], 
                            "identifier": {
                                "name": "recommenderId", 
                                "type": "string"
                            }, 
                            "supports": []
                        }, 
                        "doc": "generated from: com.linkedin.ucp.mixologist.recommender.RecommenderResource", 
                        "name": "recommender", 
                        "namespace": "com.linkedin.ucp.mixologist.recommender", 
                        "path": "/recommender", 
                        "schema": "com.linkedin.ucp.RecommenderResult"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "uscpRecommendations", 
                    "models": {
                        "com.linkedin.ucp.RecommenderInput": "{ \"type\" : \"record\", \"name\" : \"RecommenderInput\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"First-pass ranker input parameters\", \"fields\" : [ { \"name\" : \"viewer\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"member for whom the recommendations should be generated\" }, { \"name\" : \"about\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.common.Urn\" }, \"doc\" : \"urn to make recommendations for (i.e. skill urn for H2O topic page recommendations or member urn for NUS recommendations)\" }, { \"name\" : \"pageKey\", \"type\" : \"string\", \"doc\" : \"frontend pagination key\" }, { \"name\" : \"paginationKey\", \"type\" : \"string\", \"doc\" : \"recommender pagination key\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"locale of the viewer, e.g., 'en_US'\", \"optional\" : true }, { \"name\" : \"customParameters\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"ranker-specific parameters that can be populated based on federator metadata\", \"optional\" : true } ] }", 
                        "com.linkedin.ucp.RecommenderMetadata": "{ \"type\" : \"record\", \"name\" : \"RecommenderMetadata\", \"namespace\" : \"com.linkedin.ucp\", \"fields\" : [ { \"name\" : \"ranker\", \"type\" : \"string\", \"doc\" : \"Name of the first-pass ranker which produced the results.\" }, { \"name\" : \"model\", \"type\" : \"string\", \"doc\" : \"Name of the first-pass ranker's internal model which was used to produce the results.\", \"optional\" : true }, { \"name\" : \"input\", \"type\" : { \"type\" : \"record\", \"name\" : \"RecommenderInput\", \"doc\" : \"First-pass ranker input parameters\", \"fields\" : [ { \"name\" : \"viewer\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"member for whom the recommendations should be generated\" }, { \"name\" : \"about\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.common.Urn\" }, \"doc\" : \"urn to make recommendations for (i.e. skill urn for H2O topic page recommendations or member urn for NUS recommendations)\" }, { \"name\" : \"pageKey\", \"type\" : \"string\", \"doc\" : \"frontend pagination key\" }, { \"name\" : \"paginationKey\", \"type\" : \"string\", \"doc\" : \"recommender pagination key\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"locale of the viewer, e.g., 'en_US'\", \"optional\" : true }, { \"name\" : \"customParameters\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"ranker-specific parameters that can be populated based on federator metadata\", \"optional\" : true } ] }, \"doc\" : \"echoed input parameters: for tracking and debugging\" }, { \"name\" : \"groupMetaData\", \"type\" : { \"type\" : \"map\", \"values\" : { \"type\" : \"record\", \"name\" : \"GroupInfo\", \"doc\" : \"Group info which includes count and aggregation type.\", \"fields\" : [ { \"name\" : \"total\", \"type\" : \"long\", \"doc\" : \"Total number of entities in a group. This may not be equal to the number of results retured.\" }, { \"name\" : \"aggregationType\", \"type\" : \"string\", \"doc\" : \"Type by which group was aggregated. These values are specific to each recommender implementation.\" } ] } }, \"doc\" : \"Metadata associated with the group. This is a map where key is groupId and value is a record which contains metadata for that group\", \"optional\" : true }, { \"name\" : \"paginationKey\", \"type\" : \"string\", \"doc\" : \"Pagination key for recommender model\", \"optional\" : true }, { \"name\" : \"additionalMetadata\", \"type\" : { \"type\" : \"record\", \"name\" : \"CustomPropertiesWrapper\", \"doc\" : \"Empty placeholder schema for now, waiting for an *any* type from Pegasus.\", \"fields\" : [  ] }, \"doc\" : \"Additional metadata returned by FPRs (right now used by USCP to return facet count)\", \"optional\" : true } ] }", 
                        "com.linkedin.ucp.RecommenderResult": "{ \"type\" : \"record\", \"name\" : \"RecommenderResult\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"First-pass ranker result\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"ScoredEntity\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Represents an entity with a score, such as from a search, recommendation system, or the output of a classifier.\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"The id of the entity.\" }, { \"name\" : \"score\", \"type\" : \"float\", \"doc\" : \"The score of the entity. The interpretation of the score may vary by API.\" } ] } ], \"fields\" : [ { \"name\" : \"entityRepresentation\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"materialized entity representation. This may be provided by the first pass ranker that returns the scored entity. If not, the federator will create an entity representation based on a recommender-specific EntityResolver.\", \"optional\" : true }, { \"name\" : \"groupId\", \"type\" : \"string\", \"doc\" : \"If FPR wants to aggregate the results, then aggregation is specified by supplying same groupId to aggregated entities\", \"optional\" : true } ] }"
                    }, 
                    "path": "/recommender", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "path": "/recommender/{recommenderId}"
                            }, 
                            "finders": [
                                {
                                    "metadata": {
                                        "type": "com.linkedin.ucp.RecommenderMetadata"
                                    }, 
                                    "name": "recommend", 
                                    "parameters": [
                                        {
                                            "name": "query", 
                                            "type": "com.linkedin.ucp.RecommenderInput"
                                        }
                                    ]
                                }
                            ], 
                            "identifier": {
                                "name": "recommenderId", 
                                "type": "string"
                            }, 
                            "supports": []
                        }, 
                        "doc": "generated from: com.linkedin.ucp.mixologist.recommender.RecommenderResource", 
                        "name": "recommender", 
                        "namespace": "com.linkedin.ucp.mixologist.recommender", 
                        "path": "/recommender", 
                        "schema": "com.linkedin.ucp.RecommenderResult"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "hideEntityBackend", 
                    "models": {
                        "com.linkedin.hiding.HideEntity": "{ \"type\" : \"record\", \"name\" : \"HideEntity\", \"namespace\" : \"com.linkedin.hiding\", \"doc\" : \"Represents an entity that is to be hidden for the given Viewer. This could be an activity that is to be hidden, or an actor whose activity is to be hidden.\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"VersionTag\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"A resource-defined string representing the resource state for the purpose of concurrency control\", \"fields\" : [ { \"name\" : \"versionTag\", \"type\" : \"string\", \"optional\" : true } ] } ], \"fields\" : [ { \"name\" : \"viewerUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing the viewer that wants to hide this actor.\" }, { \"name\" : \"hideTargetUrn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing the entity whose activity to be hidden.\" }, { \"name\" : \"type\", \"type\" : { \"type\" : \"enum\", \"name\" : \"HideEntityType\", \"symbols\" : [ \"ACTIVITY\", \"ACTOR\" ] }, \"doc\" : \"Represents type of an entity that is to be hidden for the given Viewer i.e. is it an Activity, or an Actor.\" }, { \"name\" : \"createdDate\", \"type\" : \"long\", \"doc\" : \"Creation time of the hide record in milliseconds since epoch.\", \"optional\" : true }, { \"name\" : \"modifiedDate\", \"type\" : \"long\", \"doc\" : \"Last update time of the hide record in milliseconds since epoch.\", \"optional\" : true } ], \"version\" : 1 }"
                    }, 
                    "path": "/hideEntity", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "association": {
                            "assocKeys": [
                                {
                                    "name": "hideTargetUrn", 
                                    "type": "string"
                                }, 
                                {
                                    "name": "viewerUrn", 
                                    "type": "string"
                                }
                            ], 
                            "entity": {
                                "path": "/hideEntity/viewerUrn={viewerUrn}&hideTargetUrn={hideTargetUrn}"
                            }, 
                            "finders": [
                                {
                                    "assocKeys": [
                                        "viewerUrn"
                                    ], 
                                    "name": "viewer"
                                }
                            ], 
                            "methods": [
                                {
                                    "method": "get"
                                }, 
                                {
                                    "method": "update"
                                }, 
                                {
                                    "method": "delete"
                                }
                            ], 
                            "supports": [
                                "delete", 
                                "get", 
                                "update"
                            ]
                        }, 
                        "doc": "Typical use-cases for hideEntity resource are:\n   hide and activity -> update i.e. create a HideEntity with specific key\n   hide activity from a company -> update i.e. create a HideEntity with specific key\n   unhide -> delete i.e. delete by key\n   get all for filtering or management -> getByViewer i.e. get all for this viewer\n   simple get -> get i.e. get the HideEntity I just created\n\ngenerated from: com.linkedin.hiding.rest.HideEntityResource", 
                        "name": "hideEntity", 
                        "namespace": "com.linkedin.hiding", 
                        "path": "/hideEntity", 
                        "schema": "com.linkedin.hiding.HideEntity"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "sharedFeedsBackend", 
                    "models": {
                        "com.linkedin.ucp.apps.SharedFeed": "{ \"type\" : \"record\", \"name\" : \"SharedFeed\", \"namespace\" : \"com.linkedin.ucp.apps\", \"doc\" : \"A sharable feed (external)\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\" }, { \"name\" : \"appId\", \"type\" : \"string\" }, { \"name\" : \"feed\", \"type\" : { \"type\" : \"record\", \"name\" : \"Feed\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"A feed to be referenced in a UCP application\", \"fields\" : [ { \"name\" : \"urn\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"query\", \"type\" : \"string\", \"doc\" : \"BQL string\" }, { \"name\" : \"params\", \"type\" : { \"type\" : \"map\", \"values\" : [ \"string\", { \"type\" : \"array\", \"items\" : \"string\" }, { \"type\" : \"map\", \"values\" : \"string\" } ] }, \"optional\" : true }, { \"name\" : \"querydata\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"queryTemplate\", \"type\" : [ { \"type\" : \"record\", \"name\" : \"RecommenderQueryTemplate\", \"doc\" : \"internal model for metadata associated with a query\", \"fields\" : [ { \"name\" : \"serviceName\", \"type\" : \"string\" }, { \"name\" : \"entityResolver\", \"type\" : \"string\", \"doc\" : \"java class name of the resolver that implements com.linkedin.ucp.mixologist.EntityResolver\", \"optional\" : true }, { \"name\" : \"customParams\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"optional\" : true } ] }, { \"type\" : \"record\", \"name\" : \"FederatorQueryTemplate\", \"doc\" : \"internal model for metadata associated with a query\", \"fields\" : [ { \"name\" : \"recommenderFeeds\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"RecommenderBinding\", \"fields\" : [ { \"name\" : \"queryTemplate\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } } }, { \"name\" : \"parameterBindings\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" } } ] } }, \"doc\" : \"Array of URNs of recommender feed\" }, { \"name\" : \"requiredTasks\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"list of optional tasks that are required for this model\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"recommenderPriority\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"List of priority for the recommenders for slotting. Lower index has higher priority. Default slotting would be applied if the list is not provided.\", \"default\" : [  ], \"optional\" : true } ] } ], \"doc\" : \"internal model for metadata associated with a (recommender of federator) query\", \"optional\" : true }, { \"name\" : \"paramTTL\", \"type\" : { \"type\" : \"map\", \"values\" : \"long\" }, \"doc\" : \"A map describing the various TTLs to accept for cached data. Some feeds may be tolerable of stale data and can use this map to describe TTLs for different params. A value of DEFAULT can be specified in the map as a catch-all parameter. The TTL is intended only for querydata but may be expanded at some point for caching decoration\", \"optional\" : true } ], \"version\" : 9 } } ], \"version\" : 9 }"
                    }, 
                    "path": "/sharedFeeds", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "path": "/sharedFeeds/{id}"
                            }, 
                            "finders": [
                                {
                                    "name": "appFeeds", 
                                    "parameters": [
                                        {
                                            "name": "appId", 
                                            "type": "string"
                                        }
                                    ]
                                }
                            ], 
                            "identifier": {
                                "name": "id", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "method": "create"
                                }, 
                                {
                                    "method": "get"
                                }, 
                                {
                                    "method": "delete"
                                }, 
                                {
                                    "method": "batch_get"
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "create", 
                                "delete", 
                                "get"
                            ]
                        }, 
                        "doc": "generated from: com.linkedin.ucp.apps.rest.SharedFeedsResource", 
                        "name": "sharedFeeds", 
                        "namespace": "com.linkedin.ucp.apps.client", 
                        "path": "/sharedFeeds", 
                        "schema": "com.linkedin.ucp.apps.SharedFeed"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "contentSummaryViewsBackend", 
                    "models": {
                        "com.linkedin.ucp.ContentSummaryView": "{ \"type\" : \"record\", \"name\" : \"ContentSummaryView\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents a content summary query result\", \"fields\" : [ { \"name\" : \"object\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"doc\" : \"ObjectSummary for the content item represented by this record\" }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Language Locale\", \"default\" : { \"language\" : \"en_US\" } }, { \"name\" : \"app\", \"type\" : \"ObjectSummary\", \"default\" : {  } }, { \"name\" : \"socialSummary\", \"type\" : { \"type\" : \"record\", \"name\" : \"SocialSummary\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"Summary of the social gestures for a given activity\", \"fields\" : [ { \"name\" : \"totalComments\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recentComments\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Comment\", \"doc\" : \"A comment object\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\" }, { \"name\" : \"threadId\", \"type\" : \"string\", \"doc\" : \"The root-level object/activity for the comment. For threaded comments, this is the ID of the root of the thread\" }, { \"name\" : \"threadAuthorId\", \"type\" : \"string\", \"doc\" : \"Author Id of the activity which this comment belongs to, used by anti-spam engine \", \"optional\" : true }, { \"name\" : \"parentCommentId\", \"type\" : \"long\", \"doc\" : \"For nested comments, this is the id of the parent comment. This will be 0 for first-level comments\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"pathToRoot\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Contains the parent hierarchy. For top-level comments, this is just the threadId\", \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"level\", \"type\" : \"int\", \"doc\" : \"Nesting level for the comment. Top-level comments have this set to 1 and so on\", \"default\" : 1, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\" }, { \"name\" : \"commenterId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"commenterUrn\", \"type\" : \"com.linkedin.common.Urn\", \"optional\" : true, \"derived-from\" : \"commenterId\" }, { \"name\" : \"commenter\", \"type\" : \"com.linkedin.ucp.ObjectSummary\", \"optional\" : true }, { \"name\" : \"message\", \"type\" : \"string\", \"doc\" : \"Stores the comment message.\" }, { \"name\" : \"messageAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : \"ObjectSummary\", \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"objects\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"doc\" : \"Allows attachment of rich objects to comments.\", \"optional\" : true }, { \"name\" : \"likes\", \"type\" : { \"type\" : \"record\", \"name\" : \"VerbSocialSummary\", \"doc\" : \"Summary of the social gestures for a given verb\", \"fields\" : [ { \"name\" : \"total\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recent\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"actedOnByCurrentUser\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true } ] } }, { \"name\" : \"spam\", \"type\" : { \"type\" : \"record\", \"name\" : \"Spam\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Spam information\", \"fields\" : [ { \"name\" : \"state\", \"type\" : \"boolean\", \"doc\" : \"State is true if this is a spam, false otherwise\", \"default\" : false }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if an the decision is by an admin user, false otherwise\", \"default\" : false }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"Type of spam, such as job, event, etc\", \"default\" : \"none\" }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the spam, either classifier or a particular admin member id\", \"default\" : \"classifier\" } ] }, \"optional\" : true }, { \"name\" : \"markedAsSpam\", \"type\" : \"boolean\", \"doc\" : \"used to mark the comment as spam\", \"default\" : false, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"flags\", \"type\" : \"VerbSocialSummary\", \"optional\" : true }, { \"name\" : \"active\", \"type\" : \"boolean\", \"doc\" : \"used to soft-delete the comment\", \"default\" : true }, { \"name\" : \"deletedBy\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\", \"indexType\" : \"attribute\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"urn\", \"type\" : \"string\", \"doc\" : \"The old URN reference for this comment.\" }, { \"name\" : \"urnStd\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"The standard URN reference for this comment.\", \"optional\" : true, \"derived-from\" : \"urn\" }, { \"name\" : \"relativePosition\", \"type\" : \"int\" }, { \"name\" : \"totalFirstLevelComments\", \"type\" : \"int\", \"doc\" : \"Number of first-level comments on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"doc\" : \"Number of likes on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"aggregatedTotalLikes\", \"type\" : \"int\", \"doc\" : \"Total number of likes on this comment, including multi-level nested comments. Populated only for comments with level=1\", \"default\" : 0, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"nestedComments\", \"type\" : { \"type\" : \"array\", \"items\" : \"Comment\" }, \"doc\" : \"Comments nested within this comment. Only a configurable number of recent nested comments are always returned. The return value from the USCP comment API may include all or a different partial set of nested comments depending on the API request parameters\", \"default\" : [  ], \"optional\" : true } ], \"version\" : 16 } }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recentLikes\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"doc\" : \"An array of person\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"likedByCurrentUser\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true }, { \"name\" : \"totalShares\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"verbSummaries\", \"type\" : { \"type\" : \"map\", \"values\" : \"VerbSocialSummary\" }, \"doc\" : \"Collection of social summaries for verbs which acted on this activity.\", \"default\" : {  }, \"optional\" : true } ] }, \"doc\" : \"Summary of social gestures (comments, likes, shares, etc.) on this content item\", \"default\" : {  } }, { \"name\" : \"actions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityAction\", \"doc\" : \"A call to action\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"URL the viewer will navigate to when they take this action.\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"English label for this action\" }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"This is the canonical representation of this action that will not be used in i18n\", \"optional\" : true }, { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"This can be used as an i18n resource key\", \"optional\" : true } ] } }, \"doc\" : \"Actions which may be taken on this content item\", \"default\" : [  ] } ] }"
                    }, 
                    "path": "/contentSummaryViews", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "path": "/contentSummaryViews/{id}"
                            }, 
                            "identifier": {
                                "name": "id", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "method": "get", 
                                    "parameters": [
                                        {
                                            "default": "member:0", 
                                            "name": "viewerId", 
                                            "type": "string"
                                        }
                                    ]
                                }, 
                                {
                                    "method": "batch_get", 
                                    "parameters": [
                                        {
                                            "default": "member:0", 
                                            "name": "viewerId", 
                                            "type": "string"
                                        }
                                    ]
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "get"
                            ]
                        }, 
                        "doc": "generated from: com.linkedin.ucp.query.rest.ContentSummaryViewsResource", 
                        "name": "contentSummaryViews", 
                        "namespace": "com.linkedin.ucp.query.client", 
                        "path": "/contentSummaryViews", 
                        "schema": "com.linkedin.ucp.ContentSummaryView"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "appsBackend", 
                    "models": {
                        "com.linkedin.ucp.Activity": "{ \"type\" : \"record\", \"name\" : \"Activity\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents a raw activity to be published\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"VersionTag\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"A resource-defined string representing the resource state for the purpose of concurrency control\", \"fields\" : [ { \"name\" : \"versionTag\", \"type\" : \"string\", \"optional\" : true } ] } ], \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\", \"doc\" : \"The predefined activity id (used for NUS migration only).\", \"optional\" : true }, { \"name\" : \"actor\", \"type\" : \"string\", \"doc\" : \"An old urn referencing the actor of the activity.\" }, { \"name\" : \"actorUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing the actor of the activity.\", \"optional\" : true, \"derived-from\" : \"actor\" }, { \"name\" : \"verb\", \"type\" : { \"type\" : \"record\", \"name\" : \"Verb\", \"doc\" : \"Activity verb data\", \"fields\" : [ { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered verb.\" }, { \"name\" : \"commentary\", \"type\" : \"string\", \"doc\" : \"Optional field representing the actor's commentary about this activity, if applicable.\", \"optional\" : true }, { \"name\" : \"commentaryAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of verb commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : \"com.linkedin.common.AnyRecord\", \"doc\" : \"Map of custom property key/values\", \"optional\" : true } ] }, \"doc\" : \"The verb of the activity and it's context (commentary and attributes).\" }, { \"name\" : \"object\", \"type\" : \"ObjectSummary\", \"doc\" : \"Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url) of the object.\", \"default\" : { \"locale\" : \"en_US\" }, \"optional\" : true }, { \"name\" : \"target\", \"type\" : \"ObjectSummary\", \"doc\" : \"A urn referencing larger collection/container the 'object' is part of.  When present, the statement becomes <actor> <verb> <object> to/in/preposition <target>.  E.g. Bob posted a movie review for Inception.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\", \"doc\" : \"A urn referencing the application that published the activity.\" }, { \"name\" : \"spaces\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"The spaces in which the update is tagged; for example, you can tag an update as belonging to a members feed\", \"optional\" : true }, { \"name\" : \"visibility\", \"type\" : { \"type\" : \"record\", \"name\" : \"ActivityVisibility\", \"doc\" : \"Represents the access control rules for a given update\", \"fields\" : [ { \"name\" : \"public\", \"type\" : \"boolean\", \"doc\" : \"Global flag which indicates that this update is globally visibile\", \"default\" : false, \"optional\" : true }, { \"name\" : \"network\", \"type\" : { \"type\" : \"enum\", \"name\" : \"NetworkVisibility\", \"symbols\" : [ \"CONNECTIONS\", \"SECOND_DEGREE\" ] }, \"doc\" : \"Permit a given network access to this update; the actor for this update must be a LinkedIn member\", \"optional\" : true }, { \"name\" : \"include\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Permits a list of supported entities access to this update\", \"optional\" : true }, { \"name\" : \"exclude\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Overrides all previous rules to exclude access for a set of supported entities\", \"optional\" : true } ] }, \"doc\" : \"Visibility attached to this activity.  Explicitly sets the access control rules for this activity.\", \"default\" : { \"public\" : false } }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"keywords\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Search keywords relevant to this activity.\", \"optional\" : true }, { \"name\" : \"validAfter\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is first valid.  The activity will not be displayed until this time.\", \"optional\" : true }, { \"name\" : \"validUntil\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is last valid.  The activity will not be diplayed after this time.\", \"optional\" : true }, { \"name\" : \"actions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityAction\", \"doc\" : \"A call to action\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"URL the viewer will navigate to when they take this action.\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"English label for this action\" }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"This is the canonical representation of this action that will not be used in i18n\", \"optional\" : true }, { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"This can be used as an i18n resource key\", \"optional\" : true } ] } }, \"doc\" : \"A urn referencing a activity specific action to be included with the actions displayed in addition to the standard actions.\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Locale\", \"default\" : { \"language\" : \"en\" } }, { \"name\" : \"useObjectIdAsThreadId\", \"type\" : \"boolean\", \"doc\" : \"For comments on this activity, this flag indicates if the object Id should be the thread Id or the activity id itself should be used as the thread Id.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"sponsored\", \"type\" : \"boolean\", \"doc\" : \"Indicates that the activity is paid for by a sponsor.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"trackingMetadata\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Map of additional metadata used for client tracking. Entry key is tracking source. Entry value can be used to send webtrack events.\", \"optional\" : true }, { \"name\" : \"topicScores\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Topics associated with the object and a score on a [0..1] scale.  May be rounder if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"nusReputationScore\", \"type\" : \"float\", \"doc\" : \"Reputation score for this event's actor, 0.0 if one was not assigned to the actor of this event.\", \"default\" : 0.0, \"optional\" : true }, { \"name\" : \"deduplicationMetadata\", \"type\" : { \"type\" : \"record\", \"name\" : \"DeduplicationMetadata\", \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"fields\" : [ { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"A unique key to which all events satisfying the same de-duplication criteria are mapped.\", \"optional\" : true }, { \"name\" : \"category\", \"type\" : { \"type\" : \"enum\", \"name\" : \"DeduplicationCategory\", \"doc\" : \"Whether, within the same de-duplication group (identified by a common key), this event should be prioritized for being filtered out. ACTIVE events are always preferred over PASSIVE events, but with multiple ACTIVE events whichever event comes first will be preferred.\", \"symbols\" : [ \"ACTIVE\", \"PASSIVE\" ] }, \"optional\" : true } ] }, \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"optional\" : true } ], \"version\" : 10 }", 
                        "com.linkedin.ucp.apps.App": "{ \"type\" : \"record\", \"name\" : \"App\", \"namespace\" : \"com.linkedin.ucp.apps\", \"doc\" : \"A UCP application (external)\", \"fields\" : [ { \"name\" : \"namespace\", \"type\" : \"string\", \"doc\" : \"Developer namespace and unique id for the app\", \"indexType\" : \"text\" }, { \"name\" : \"name\", \"type\" : \"string\" }, { \"name\" : \"description\", \"type\" : \"string\" }, { \"name\" : \"tags\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" } }, { \"name\" : \"owner\", \"type\" : \"string\" }, { \"name\" : \"admins\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"indexType\" : \"attribute\" }, { \"name\" : \"relatedLinks\", \"type\" : { \"type\" : \"record\", \"name\" : \"AppRelatedLinks\", \"fields\" : [ { \"name\" : \"publish\", \"type\" : \"string\", \"doc\" : \"A POST to this url will create a new activity.  This URL is computed and provided on output, may not be set.\", \"optional\" : true }, { \"name\" : \"query\", \"type\" : \"string\", \"doc\" : \"Collection resource endpoint for accessing feeds, a feed URN must be appended to this URL to fetch that feed.  This URL is computed and provided on output, may not be set.\", \"optional\" : true } ] }, \"optional\" : true }, { \"name\" : \"labels\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Label\", \"doc\" : \"A localizable label\", \"fields\" : [ { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"I18N key of the label\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"Label text in the provided language\" }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Language Locale\", \"default\" : { \"language\" : \"en\" } } ] } }, \"optional\" : true }, { \"name\" : \"isProductionReady\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"disableSpamClassification\", \"type\" : \"boolean\", \"optional\" : true } ], \"version\" : 6 }", 
                        "com.linkedin.ucp.apps.AppFeed": "{ \"type\" : \"record\", \"name\" : \"AppFeed\", \"namespace\" : \"com.linkedin.ucp.apps\", \"doc\" : \"A feed to be referenced in a UCP application (external, rename to just feed?)\", \"fields\" : [ { \"name\" : \"appId\", \"type\" : \"string\" }, { \"name\" : \"name\", \"type\" : \"string\" }, { \"name\" : \"description\", \"type\" : \"string\" }, { \"name\" : \"feed\", \"type\" : { \"type\" : \"record\", \"name\" : \"Feed\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"A feed to be referenced in a UCP application\", \"fields\" : [ { \"name\" : \"urn\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"query\", \"type\" : \"string\", \"doc\" : \"BQL string\" }, { \"name\" : \"params\", \"type\" : { \"type\" : \"map\", \"values\" : [ \"string\", { \"type\" : \"array\", \"items\" : \"string\" }, { \"type\" : \"map\", \"values\" : \"string\" } ] }, \"optional\" : true }, { \"name\" : \"querydata\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"queryTemplate\", \"type\" : [ { \"type\" : \"record\", \"name\" : \"RecommenderQueryTemplate\", \"doc\" : \"internal model for metadata associated with a query\", \"fields\" : [ { \"name\" : \"serviceName\", \"type\" : \"string\" }, { \"name\" : \"entityResolver\", \"type\" : \"string\", \"doc\" : \"java class name of the resolver that implements com.linkedin.ucp.mixologist.EntityResolver\", \"optional\" : true }, { \"name\" : \"customParams\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"optional\" : true } ] }, { \"type\" : \"record\", \"name\" : \"FederatorQueryTemplate\", \"doc\" : \"internal model for metadata associated with a query\", \"fields\" : [ { \"name\" : \"recommenderFeeds\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"RecommenderBinding\", \"fields\" : [ { \"name\" : \"queryTemplate\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } } }, { \"name\" : \"parameterBindings\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" } } ] } }, \"doc\" : \"Array of URNs of recommender feed\" }, { \"name\" : \"requiredTasks\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"list of optional tasks that are required for this model\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"recommenderPriority\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"List of priority for the recommenders for slotting. Lower index has higher priority. Default slotting would be applied if the list is not provided.\", \"default\" : [  ], \"optional\" : true } ] } ], \"doc\" : \"internal model for metadata associated with a (recommender of federator) query\", \"optional\" : true }, { \"name\" : \"paramTTL\", \"type\" : { \"type\" : \"map\", \"values\" : \"long\" }, \"doc\" : \"A map describing the various TTLs to accept for cached data. Some feeds may be tolerable of stale data and can use this map to describe TTLs for different params. A value of DEFAULT can be specified in the map as a catch-all parameter. The TTL is intended only for querydata but may be expanded at some point for caching decoration\", \"optional\" : true } ], \"version\" : 9 } }, { \"name\" : \"relatedLinks\", \"type\" : { \"type\" : \"record\", \"name\" : \"AppFeedRelatedLinks\", \"fields\" : [ { \"name\" : \"query\", \"type\" : \"string\", \"doc\" : \"A GET to this url will fetch the feed defined by this query.  This URL is computed and provided on output, may not be set.\" } ] }, \"optional\" : true } ], \"version\" : 9 }", 
                        "com.linkedin.ucp.apps.ObjectSchema": "{ \"type\" : \"record\", \"name\" : \"ObjectSchema\", \"namespace\" : \"com.linkedin.ucp.apps\", \"doc\" : \"An Object (noun) to be referenced in a UCP Activity (external)\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\" }, { \"name\" : \"appId\", \"type\" : \"string\" }, { \"name\" : \"name\", \"type\" : \"string\" }, { \"name\" : \"sampleUrl\", \"type\" : \"string\" }, { \"name\" : \"sampleTitle\", \"type\" : \"string\" }, { \"name\" : \"sampleImage\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"article\", \"type\" : \"string\" }, { \"name\" : \"singularForm\", \"type\" : \"string\" }, { \"name\" : \"pluralForm\", \"type\" : \"string\" }, { \"name\" : \"rawCustomProperties\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"customProperties\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"CustomProperty\", \"doc\" : \"A custom property to be utilized in a verb/noun schema (external)\", \"fields\" : [ { \"name\" : \"name\", \"type\" : \"string\" }, { \"name\" : \"type\", \"type\" : { \"type\" : \"enum\", \"name\" : \"CustomPropertyType\", \"symbols\" : [ \"RECORD\", \"BOOLEAN\", \"DATETIME\", \"FLOAT\", \"DOUBLE\", \"INTEGER\", \"LONG\", \"STRING\", \"OBJECT\" ] }, \"doc\" : \"Type is either a namespaced record name (string) or one of the specified primitive types\" }, { \"name\" : \"recordType\", \"type\" : \"string\", \"doc\" : \"record type of value.  Must be registered avro schema.  This field may only be set if type field is set to RECORD\", \"optional\" : true }, { \"name\" : \"objectType\", \"type\" : \"string\", \"doc\" : \"object type of value.  Must be object schema either registered with this app or with a global app.  This field may only be set if type field is set to OBJECT\", \"optional\" : true }, { \"name\" : \"isRequired\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"isArray\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true }, { \"name\" : \"sampleValue\", \"type\" : [ \"string\", \"double\", \"long\", { \"type\" : \"map\", \"values\" : \"string\" } ], \"optional\" : true } ] } }, \"optional\" : true }, { \"name\" : \"layout\", \"type\" : { \"type\" : \"record\", \"name\" : \"Layout\", \"namespace\" : \"com.linkedin.ucp.apps.layouts\", \"doc\" : \"Union of all supported layouts\", \"fields\" : [ { \"name\" : \"spec\", \"type\" : [ { \"type\" : \"record\", \"name\" : \"BasicLayout\", \"doc\" : \"Basic layout which contains an image, a headline, a summary, and the domain\", \"fields\" : [ { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Image\", \"doc\" : \"Layout element representing an image\", \"fields\" : [ { \"name\" : \"_source\", \"type\" : \"string\" }, { \"name\" : \"_onHover\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"_onClick\", \"type\" : \"string\", \"optional\" : true } ] } }, { \"name\" : \"domain\", \"type\" : { \"type\" : \"record\", \"name\" : \"Label\", \"doc\" : \"Layout element representing a block of text\", \"fields\" : [ { \"name\" : \"_text\", \"type\" : \"string\" }, { \"name\" : \"_onClick\", \"type\" : \"string\", \"optional\" : true } ] } }, { \"name\" : \"headline\", \"type\" : \"Label\" }, { \"name\" : \"summary\", \"type\" : \"Label\" } ] } ] } ] }, \"optional\" : true } ], \"version\" : 2 }", 
                        "com.linkedin.ucp.apps.VerbSchema": "{ \"type\" : \"record\", \"name\" : \"VerbSchema\", \"namespace\" : \"com.linkedin.ucp.apps\", \"doc\" : \"A Verb to be referenced in a UCP Activity (external)\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\" }, { \"name\" : \"appId\", \"type\" : \"string\" }, { \"name\" : \"name\", \"type\" : \"string\" }, { \"name\" : \"objectTypes\", \"type\" : { \"type\" : \"array\", \"items\" : [ \"string\", { \"type\" : \"enum\", \"name\" : \"ObjectType\", \"symbols\" : [ \"NONE\", \"ANY\", \"OBJECT\", \"ACTIVITY\" ] } ] }, \"doc\" : \"List of object types this verb can interact with\" }, { \"name\" : \"actorTypes\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"enum\", \"name\" : \"ActorType\", \"doc\" : \"Actor types\", \"symbols\" : [ \"PERSON\", \"COMPANY\", \"GROUP\", \"ANY\", \"INDUSTRY\", \"SCHOOL\", \"CHANNEL\" ] } } }, { \"name\" : \"conjugations\", \"type\" : { \"type\" : \"record\", \"name\" : \"Conjugations\", \"fields\" : [ { \"name\" : \"presentTenseSingular\", \"type\" : \"string\" }, { \"name\" : \"presentTensePlural\", \"type\" : \"string\" }, { \"name\" : \"pastTenseSingular\", \"type\" : \"string\" }, { \"name\" : \"pastTensePlural\", \"type\" : \"string\" } ] } }, { \"name\" : \"targetRequired\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"targetPreposition\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"appPreposition\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"rawCustomProperties\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"customProperties\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"CustomProperty\", \"doc\" : \"A custom property to be utilized in a verb/noun schema (external)\", \"fields\" : [ { \"name\" : \"name\", \"type\" : \"string\" }, { \"name\" : \"type\", \"type\" : { \"type\" : \"enum\", \"name\" : \"CustomPropertyType\", \"symbols\" : [ \"RECORD\", \"BOOLEAN\", \"DATETIME\", \"FLOAT\", \"DOUBLE\", \"INTEGER\", \"LONG\", \"STRING\", \"OBJECT\" ] }, \"doc\" : \"Type is either a namespaced record name (string) or one of the specified primitive types\" }, { \"name\" : \"recordType\", \"type\" : \"string\", \"doc\" : \"record type of value.  Must be registered avro schema.  This field may only be set if type field is set to RECORD\", \"optional\" : true }, { \"name\" : \"objectType\", \"type\" : \"string\", \"doc\" : \"object type of value.  Must be object schema either registered with this app or with a global app.  This field may only be set if type field is set to OBJECT\", \"optional\" : true }, { \"name\" : \"isRequired\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"isArray\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true }, { \"name\" : \"sampleValue\", \"type\" : [ \"string\", \"double\", \"long\", { \"type\" : \"map\", \"values\" : \"string\" } ], \"optional\" : true } ] } }, \"optional\" : true }, { \"name\" : \"_index\", \"type\" : \"long\", \"optional\" : true }, { \"name\" : \"version\", \"type\" : \"int\", \"doc\" : \"each time verb is changed, the version should be bumped up by one\", \"optional\" : true } ], \"version\" : 7 }"
                    },
                    "path": "/apps", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "annotations" : {
                          "internalToSuperblock" : {
                            "doc" : "For use by the USCP Superblock only."
                          }
                        },
                        "collection": {
                            "actions": [
                                {
                                    "name": "preview", 
                                    "parameters": [
                                        {
                                            "name": "viewerId", 
                                            "type": "string"
                                        }, 
                                        {
                                            "name": "key", 
                                            "type": "string"
                                        }, 
                                        {
                                            "name": "verbType", 
                                            "type": "string"
                                        }, 
                                        {
                                            "name": "objectType", 
                                            "type": "string"
                                        }
                                    ], 
                                    "returns": "com.linkedin.ucp.Activity"
                                }
                            ], 
                            "entity": {
                                "path": "/apps/{appId}", 
                                "subresources": [
                                    {
                                        "collection": {
                                            "entity": {
                                                "path": "/apps/{appId}/feeds/{id}"
                                            }, 
                                            "finders": [
                                                {
                                                    "name": "all"
                                                }
                                            ], 
                                            "identifier": {
                                                "name": "id", 
                                                "type": "string"
                                            }, 
                                            "methods": [
                                                {
                                                    "doc": "Should only be used for creating a new feed. If the feed exist, update should be used instead. The version should\n not be specified.", 
                                                    "method": "create"
                                                }, 
                                                {
                                                    "method": "get"
                                                }, 
                                                {
                                                    "doc": "Update an existing feed. A new version of the feed will be added. The version should not be specified.", 
                                                    "method": "update"
                                                }, 
                                                {
                                                    "doc": "Patch operation. A new version of the feed will be added. The version should not be specified.", 
                                                    "method": "partial_update"
                                                }, 
                                                {
                                                    "doc": "Delete the latest version of a feed. If no version is specified, the latest version is deleted.", 
                                                    "method": "delete"
                                                }, 
                                                {
                                                    "method": "batch_get"
                                                }
                                            ], 
                                            "supports": [
                                                "batch_get", 
                                                "create", 
                                                "delete", 
                                                "get", 
                                                "partial_update", 
                                                "update"
                                            ]
                                        }, 
                                        "doc": "Application feeds endpoint\n\ngenerated from: com.linkedin.ucp.apps.rest.FeedsResource", 
                                        "name": "feeds", 
                                        "namespace": "com.linkedin.ucp.apps.client", 
                                        "path": "/apps/{appId}/feeds", 
                                        "schema": "com.linkedin.ucp.apps.AppFeed"
                                    }, 
                                    {
                                        "collection": {
                                            "actions": [
                                                {
                                                    "doc": "Generates the Pegasus Schema for the custom properties of a given object", 
                                                    "name": "pegasus", 
                                                    "parameters": [
                                                        {
                                                            "name": "objectUrn", 
                                                            "type": "string"
                                                        }
                                                    ], 
                                                    "returns": "string"
                                                }
                                            ], 
                                            "entity": {
                                                "path": "/apps/{appId}/objects/{objectId}"
                                            }, 
                                            "finders": [
                                                {
                                                    "name": "all"
                                                }
                                            ], 
                                            "identifier": {
                                                "name": "objectId", 
                                                "type": "string"
                                            }, 
                                            "methods": [
                                                {
                                                    "method": "create"
                                                }, 
                                                {
                                                    "method": "get"
                                                }, 
                                                {
                                                    "method": "update"
                                                }, 
                                                {
                                                    "doc": "Patch operation.", 
                                                    "method": "partial_update"
                                                }, 
                                                {
                                                    "method": "delete"
                                                }, 
                                                {
                                                    "method": "batch_get"
                                                }
                                            ], 
                                            "supports": [
                                                "batch_get", 
                                                "create", 
                                                "delete", 
                                                "get", 
                                                "partial_update", 
                                                "update"
                                            ]
                                        }, 
                                        "doc": "Object schema endpoint\n\ngenerated from: com.linkedin.ucp.apps.rest.ObjectSchemasResource", 
                                        "name": "objects", 
                                        "namespace": "com.linkedin.ucp.apps.client", 
                                        "path": "/apps/{appId}/objects", 
                                        "schema": "com.linkedin.ucp.apps.ObjectSchema"
                                    }, 
                                    {
                                        "collection": {
                                            "actions": [
                                                {
                                                    "doc": "Regenerate all Resource strings for a given verb", 
                                                    "name": "generateResources", 
                                                    "parameters": [
                                                        {
                                                            "name": "verb", 
                                                            "type": "string"
                                                        }
                                                    ]
                                                }, 
                                                {
                                                    "doc": "Generates the Pegasus Schema for the custom properties of a given verb", 
                                                    "name": "pegasus", 
                                                    "parameters": [
                                                        {
                                                            "name": "verbUrn", 
                                                            "type": "string"
                                                        }
                                                    ], 
                                                    "returns": "string"
                                                }
                                            ], 
                                            "entity": {
                                                "path": "/apps/{appId}/verbs/{verbId}"
                                            }, 
                                            "finders": [
                                                {
                                                    "name": "all"
                                                }
                                            ], 
                                            "identifier": {
                                                "name": "verbId", 
                                                "type": "string"
                                            }, 
                                            "methods": [
                                                {
                                                    "method": "create"
                                                }, 
                                                {
                                                    "method": "get"
                                                }, 
                                                {
                                                    "method": "update"
                                                }, 
                                                {
                                                    "doc": "Patch operation.", 
                                                    "method": "partial_update"
                                                }, 
                                                {
                                                    "method": "delete"
                                                }, 
                                                {
                                                    "method": "batch_get"
                                                }
                                            ], 
                                            "supports": [
                                                "batch_get", 
                                                "create", 
                                                "delete", 
                                                "get", 
                                                "partial_update", 
                                                "update"
                                            ]
                                        }, 
                                        "doc": "Verb schema endpoint\n\ngenerated from: com.linkedin.ucp.apps.rest.VerbSchemasResource", 
                                        "name": "verbs", 
                                        "namespace": "com.linkedin.ucp.apps.client", 
                                        "path": "/apps/{appId}/verbs", 
                                        "schema": "com.linkedin.ucp.apps.VerbSchema"
                                    }
                                ]
                            }, 
                            "finders": [
                                {
                                    "name": "member", 
                                    "parameters": [
                                        {
                                            "doc": "ownerId", 
                                            "name": "ownerId", 
                                            "type": "long"
                                        }
                                    ]
                                }
                            ], 
                            "identifier": {
                                "name": "appId", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "method": "create"
                                }, 
                                {
                                    "method": "get"
                                }, 
                                {
                                    "method": "update"
                                }, 
                                {
                                    "doc": "Patch operation.", 
                                    "method": "partial_update"
                                }, 
                                {
                                    "method": "delete"
                                }, 
                                {
                                    "method": "batch_get"
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "create", 
                                "delete", 
                                "get", 
                                "partial_update", 
                                "update"
                            ]
                        }, 
                        "doc": "Apps object endpoint.\n\ngenerated from: com.linkedin.ucp.apps.rest.AppsResource", 
                        "name": "apps", 
                        "namespace": "com.linkedin.ucp.apps.client", 
                        "path": "/apps", 
                        "schema": "com.linkedin.ucp.apps.App"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "hideEntity", 
                    "models": {
                        "com.linkedin.hiding.HideEntity": "{ \"type\" : \"record\", \"name\" : \"HideEntity\", \"namespace\" : \"com.linkedin.hiding\", \"doc\" : \"Represents an entity that is to be hidden for the given Viewer. This could be an activity that is to be hidden, or an actor whose activity is to be hidden.\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"VersionTag\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"A resource-defined string representing the resource state for the purpose of concurrency control\", \"fields\" : [ { \"name\" : \"versionTag\", \"type\" : \"string\", \"optional\" : true } ] } ], \"fields\" : [ { \"name\" : \"viewerUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing the viewer that wants to hide this actor.\" }, { \"name\" : \"hideTargetUrn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing the entity whose activity to be hidden.\" }, { \"name\" : \"type\", \"type\" : { \"type\" : \"enum\", \"name\" : \"HideEntityType\", \"symbols\" : [ \"ACTIVITY\", \"ACTOR\" ] }, \"doc\" : \"Represents type of an entity that is to be hidden for the given Viewer i.e. is it an Activity, or an Actor.\" }, { \"name\" : \"createdDate\", \"type\" : \"long\", \"doc\" : \"Creation time of the hide record in milliseconds since epoch.\", \"optional\" : true }, { \"name\" : \"modifiedDate\", \"type\" : \"long\", \"doc\" : \"Last update time of the hide record in milliseconds since epoch.\", \"optional\" : true } ], \"version\" : 1 }"
                    }, 
                    "path": "/hideEntity", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "association": {
                            "assocKeys": [
                                {
                                    "name": "hideTargetUrn", 
                                    "type": "string"
                                }, 
                                {
                                    "name": "viewerUrn", 
                                    "type": "string"
                                }
                            ], 
                            "entity": {
                                "path": "/hideEntity/viewerUrn={viewerUrn}&hideTargetUrn={hideTargetUrn}"
                            }, 
                            "finders": [
                                {
                                    "assocKeys": [
                                        "viewerUrn"
                                    ], 
                                    "name": "viewer"
                                }
                            ], 
                            "methods": [
                                {
                                    "method": "get"
                                }, 
                                {
                                    "method": "update"
                                }, 
                                {
                                    "method": "delete"
                                }
                            ], 
                            "supports": [
                                "delete", 
                                "get", 
                                "update"
                            ]
                        }, 
                        "doc": "Typical use-cases for hideEntity resource are:\n   hide and activity -> update i.e. create a HideEntity with specific key\n   hide activity from a company -> update i.e. create a HideEntity with specific key\n   unhide -> delete i.e. delete by key\n   get all for filtering or management -> getByViewer i.e. get all for this viewer\n   simple get -> get i.e. get the HideEntity I just created\n\ngenerated from: com.linkedin.hiding.rest.HideEntityResource", 
                        "name": "hideEntity", 
                        "namespace": "com.linkedin.hiding", 
                        "path": "/hideEntity", 
                        "schema": "com.linkedin.hiding.HideEntity"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "translatableContentBackend", 
                    "models": {
                        "com.linkedin.ucp.internal.TranslatableContent": "{ \"type\" : \"record\", \"name\" : \"TranslatableContent\", \"namespace\" : \"com.linkedin.ucp.internal\", \"doc\" : \"Represents the key value pair for resource bundle\", \"fields\" : [ { \"name\" : \"key\", \"type\" : \"string\" }, { \"name\" : \"appId\", \"type\" : \"string\" }, { \"name\" : \"value\", \"type\" : \"string\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\", \"indexType\" : \"attribute\" }, { \"name\" : \"comment\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"version\", \"type\" : \"int\", \"doc\" : \"each time verb is changed, the version should be bumped up by one\", \"optional\" : true } ], \"version\" : 4 }"
                    }, 
                    "path": "/translatableContent", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "association": {
                            "assocKeys": [
                                {
                                    "name": "appId", 
                                    "type": "string"
                                }, 
                                {
                                    "name": "key", 
                                    "type": "string"
                                }
                            ], 
                            "entity": {
                                "path": "/translatableContent/key={key}&appId={appId}"
                            }, 
                            "finders": [
                                {
                                    "assocKeys": [
                                        "key"
                                    ], 
                                    "doc": "Finds all resources by a given key", 
                                    "name": "KeyFiltered", 
                                    "parameters": [
                                        {
                                            "name": "appIdsList", 
                                            "type": "string"
                                        }
                                    ]
                                }, 
                                {
                                    "doc": "Finds all resources by a given app", 
                                    "name": "app", 
                                    "parameters": [
                                        {
                                            "name": "appId", 
                                            "type": "string"
                                        }
                                    ]
                                }
                            ], 
                            "methods": [
                                {
                                    "method": "get"
                                }, 
                                {
                                    "method": "update"
                                }, 
                                {
                                    "method": "delete"
                                }, 
                                {
                                    "method": "batch_get"
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "delete", 
                                "get", 
                                "update"
                            ]
                        }, 
                        "doc": "Created by IntelliJ IDEA. User: pguo Date: 3/13/12 Time: 3:04 PM To change this template use File | Settings | File\n Templates.\n\ngenerated from: com.linkedin.ucp.apps.rest.TranslatableContentResource", 
                        "name": "translatableContent", 
                        "namespace": "com.linkedin.ucp.apps.client", 
                        "path": "/translatableContent", 
                        "schema": "com.linkedin.ucp.internal.TranslatableContent"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "activityviewsBackend", 
                    "path": "/activityviews", 
                    "protocol": "REST"
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "activityEventsBackend", 
                    "models": {
                        "com.linkedin.ucp.internal.ActivityEvent": "{ \"type\" : \"record\", \"name\" : \"ActivityEvent\", \"namespace\" : \"com.linkedin.ucp.internal\", \"doc\" : \"Represents an internal activity after its published\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"activity\", \"type\" : { \"type\" : \"record\", \"name\" : \"Activity\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents a raw activity to be published\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"VersionTag\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"A resource-defined string representing the resource state for the purpose of concurrency control\", \"fields\" : [ { \"name\" : \"versionTag\", \"type\" : \"string\", \"optional\" : true } ] } ], \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\", \"doc\" : \"The predefined activity id (used for NUS migration only).\", \"optional\" : true }, { \"name\" : \"actor\", \"type\" : \"string\", \"doc\" : \"An old urn referencing the actor of the activity.\" }, { \"name\" : \"actorUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing the actor of the activity.\", \"optional\" : true, \"derived-from\" : \"actor\" }, { \"name\" : \"verb\", \"type\" : { \"type\" : \"record\", \"name\" : \"Verb\", \"doc\" : \"Activity verb data\", \"fields\" : [ { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered verb.\" }, { \"name\" : \"commentary\", \"type\" : \"string\", \"doc\" : \"Optional field representing the actor's commentary about this activity, if applicable.\", \"optional\" : true }, { \"name\" : \"commentaryAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of verb commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : \"com.linkedin.common.AnyRecord\", \"doc\" : \"Map of custom property key/values\", \"optional\" : true } ] }, \"doc\" : \"The verb of the activity and it's context (commentary and attributes).\" }, { \"name\" : \"object\", \"type\" : \"ObjectSummary\", \"doc\" : \"Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url) of the object.\", \"default\" : { \"locale\" : \"en_US\" }, \"optional\" : true }, { \"name\" : \"target\", \"type\" : \"ObjectSummary\", \"doc\" : \"A urn referencing larger collection/container the 'object' is part of.  When present, the statement becomes <actor> <verb> <object> to/in/preposition <target>.  E.g. Bob posted a movie review for Inception.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\", \"doc\" : \"A urn referencing the application that published the activity.\" }, { \"name\" : \"spaces\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"The spaces in which the update is tagged; for example, you can tag an update as belonging to a members feed\", \"optional\" : true }, { \"name\" : \"visibility\", \"type\" : { \"type\" : \"record\", \"name\" : \"ActivityVisibility\", \"doc\" : \"Represents the access control rules for a given update\", \"fields\" : [ { \"name\" : \"public\", \"type\" : \"boolean\", \"doc\" : \"Global flag which indicates that this update is globally visibile\", \"default\" : false, \"optional\" : true }, { \"name\" : \"network\", \"type\" : { \"type\" : \"enum\", \"name\" : \"NetworkVisibility\", \"symbols\" : [ \"CONNECTIONS\", \"SECOND_DEGREE\" ] }, \"doc\" : \"Permit a given network access to this update; the actor for this update must be a LinkedIn member\", \"optional\" : true }, { \"name\" : \"include\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Permits a list of supported entities access to this update\", \"optional\" : true }, { \"name\" : \"exclude\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Overrides all previous rules to exclude access for a set of supported entities\", \"optional\" : true } ] }, \"doc\" : \"Visibility attached to this activity.  Explicitly sets the access control rules for this activity.\", \"default\" : { \"public\" : false } }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"keywords\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Search keywords relevant to this activity.\", \"optional\" : true }, { \"name\" : \"validAfter\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is first valid.  The activity will not be displayed until this time.\", \"optional\" : true }, { \"name\" : \"validUntil\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is last valid.  The activity will not be diplayed after this time.\", \"optional\" : true }, { \"name\" : \"actions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityAction\", \"doc\" : \"A call to action\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"URL the viewer will navigate to when they take this action.\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"English label for this action\" }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"This is the canonical representation of this action that will not be used in i18n\", \"optional\" : true }, { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"This can be used as an i18n resource key\", \"optional\" : true } ] } }, \"doc\" : \"A urn referencing a activity specific action to be included with the actions displayed in addition to the standard actions.\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Locale\", \"default\" : { \"language\" : \"en\" } }, { \"name\" : \"useObjectIdAsThreadId\", \"type\" : \"boolean\", \"doc\" : \"For comments on this activity, this flag indicates if the object Id should be the thread Id or the activity id itself should be used as the thread Id.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"sponsored\", \"type\" : \"boolean\", \"doc\" : \"Indicates that the activity is paid for by a sponsor.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"trackingMetadata\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Map of additional metadata used for client tracking. Entry key is tracking source. Entry value can be used to send webtrack events.\", \"optional\" : true }, { \"name\" : \"topicScores\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Topics associated with the object and a score on a [0..1] scale.  May be rounder if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"nusReputationScore\", \"type\" : \"float\", \"doc\" : \"Reputation score for this event's actor, 0.0 if one was not assigned to the actor of this event.\", \"default\" : 0.0, \"optional\" : true }, { \"name\" : \"deduplicationMetadata\", \"type\" : { \"type\" : \"record\", \"name\" : \"DeduplicationMetadata\", \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"fields\" : [ { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"A unique key to which all events satisfying the same de-duplication criteria are mapped.\", \"optional\" : true }, { \"name\" : \"category\", \"type\" : { \"type\" : \"enum\", \"name\" : \"DeduplicationCategory\", \"doc\" : \"Whether, within the same de-duplication group (identified by a common key), this event should be prioritized for being filtered out. ACTIVE events are always preferred over PASSIVE events, but with multiple ACTIVE events whichever event comes first will be preferred.\", \"symbols\" : [ \"ACTIVE\", \"PASSIVE\" ] }, \"optional\" : true } ] }, \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"optional\" : true } ], \"version\" : 10 } }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"RawCustomProperties\", \"fields\" : [ { \"name\" : \"object\", \"type\" : { \"type\" : \"record\", \"name\" : \"EmbeddedDocument\", \"doc\" : \"Pegasus does not effectively support wildcard types. USCP implements this behavior using an EmbeddedDocument wrapper to express self-defined content.\", \"fields\" : [ { \"name\" : \"schemaId\", \"type\" : \"string\", \"doc\" : \"Identifier used to lookup schema. In USCP, this will be an MD5 of the full class name.\" }, { \"name\" : \"type\", \"type\" : { \"type\" : \"enum\", \"name\" : \"EmbeddedDocumentType\", \"symbols\" : [ \"AVRO\" ] }, \"doc\" : \"Format of data.  In USCP, this will be 'avro'.\" }, { \"name\" : \"data\", \"type\" : \"string\", \"doc\" : \"String representation of data payload.  In USCP, this will be avro-json.\" } ] }, \"optional\" : true }, { \"name\" : \"target\", \"type\" : \"EmbeddedDocument\", \"optional\" : true }, { \"name\" : \"verb\", \"type\" : \"EmbeddedDocument\", \"optional\" : true } ] }, \"optional\" : true }, { \"name\" : \"indexOperation\", \"type\" : { \"type\" : \"enum\", \"name\" : \"Operation\", \"doc\" : \"Denotes type of activity index operation\", \"symbols\" : [ \"CREATE\", \"UPDATE\", \"DELETE\" ] } }, { \"name\" : \"asyncIndex\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true }, { \"name\" : \"active\", \"type\" : \"boolean\", \"default\" : true }, { \"name\" : \"references\", \"type\" : { \"type\" : \"map\", \"values\" : [ \"ActivityEvent\", \"com.linkedin.ucp.ObjectSummary\", { \"type\" : \"record\", \"name\" : \"Person\", \"doc\" : \"A mini profile\", \"fields\" : [ { \"name\" : \"active\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true }, { \"name\" : \"firstName\", \"type\" : \"string\", \"default\" : \"\", \"optional\" : true }, { \"name\" : \"lastName\", \"type\" : \"string\", \"default\" : \"\", \"optional\" : true }, { \"name\" : \"profileIndustry\", \"type\" : \"int\", \"default\" : -1, \"optional\" : true }, { \"name\" : \"registrationDate\", \"type\" : \"long\", \"default\" : -1, \"optional\" : true }, { \"name\" : \"gender\", \"type\" : \"string\", \"default\" : \"NotSet\", \"optional\" : true }, { \"name\" : \"yearBorn\", \"type\" : \"int\", \"default\" : -1, \"optional\" : true }, { \"name\" : \"countryCode\", \"type\" : \"string\", \"default\" : \"\", \"optional\" : true }, { \"name\" : \"postalCode\", \"type\" : \"string\", \"default\" : \"\", \"optional\" : true }, { \"name\" : \"geoPostalCode\", \"type\" : \"string\", \"default\" : \"\", \"optional\" : true }, { \"name\" : \"geoPlaceCode\", \"type\" : \"string\", \"default\" : \"\", \"optional\" : true }, { \"name\" : \"regionCode\", \"type\" : \"int\", \"default\" : -1, \"optional\" : true }, { \"name\" : \"latitude\", \"type\" : \"float\", \"default\" : -1.0, \"optional\" : true }, { \"name\" : \"longitude\", \"type\" : \"float\", \"default\" : -1.0, \"optional\" : true }, { \"name\" : \"geoCoordX\", \"type\" : \"float\", \"default\" : -1.0, \"optional\" : true }, { \"name\" : \"geoCoordY\", \"type\" : \"float\", \"default\" : -1.0, \"optional\" : true }, { \"name\" : \"geoCoordZ\", \"type\" : \"float\", \"default\" : -1.0, \"optional\" : true }, { \"name\" : \"currentIndustries\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"currentCompanies\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"currentJobIdsV1\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"currentTitlesV2\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"currentSenioritiesV2\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"currentFunctionsV2\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"pastIndustries\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"pastCompanies\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"pastJobIdsV1\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"pastTitlesV2\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"pastSenioritiesV2\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"pastFunctionsV2\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"schools\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"degreeIds\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"fieldOfStudyCipCodeIds\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"skillIds\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"skillScores\", \"type\" : { \"type\" : \"array\", \"items\" : \"float\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"anetIds\", \"type\" : { \"type\" : \"array\", \"items\" : \"int\" }, \"doc\" : \"requires additional look-ups\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"connectionCount\", \"type\" : \"int\", \"doc\" : \"requires additional look-ups\", \"default\" : -1, \"optional\" : true }, { \"name\" : \"companyFortune1000\", \"type\" : { \"type\" : \"map\", \"values\" : \"int\" }, \"doc\" : \"key is company id. requires additional look-ups\", \"default\" : {  }, \"optional\" : true }, { \"name\" : \"companySize\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"key is company id. requires additional look-ups\", \"default\" : {  }, \"optional\" : true } ] } ] }, \"doc\" : \"Resolved data for referenced actors/content/runtime vars\" } ], \"version\" : 19 }"
                    }, 
                    "path": "/activityEvents", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "path": "/activityEvents/{id}"
                            }, 
                            "identifier": {
                                "name": "id", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "method": "create"
                                }
                            ], 
                            "supports": [
                                "create"
                            ]
                        }, 
                        "doc": "Activity publication endpoint. Supports get, create and delete, though 'get' is generally not very useful\n\ngenerated from: com.linkedin.ucp.publish.rest.ActivityEventsResource", 
                        "name": "activityEvents", 
                        "namespace": "com.linkedin.ucp.publish.client", 
                        "path": "/activityEvents", 
                        "schema": "com.linkedin.ucp.internal.ActivityEvent"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "objectLikeSummariesBackend", 
                    "models": {
                        "com.linkedin.ucp.social.ObjectLikeSummary": "{ \"type\" : \"record\", \"name\" : \"ObjectLikeSummary\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"A summary of total and recent likes on a particular object (by all actors)\", \"fields\" : [ { \"name\" : \"objectId\", \"type\" : \"string\" }, { \"name\" : \"objectUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"optional\" : true, \"derived-from\" : \"objectId\" }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recentActors\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] } }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"firstLikeDate\", \"type\" : \"long\" }, { \"name\" : \"lastLikeDate\", \"type\" : \"long\" } ], \"version\" : 8 }"
                    }, 
                    "path": "/objectLikeSummaries", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "path": "/objectLikeSummaries/{objectId}"
                            }, 
                            "identifier": {
                                "name": "objectId", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "method": "get"
                                }, 
                                {
                                    "method": "batch_get"
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "get"
                            ]
                        }, 
                        "doc": "Read-only collection of summaries of each object that has been liked.   Each object-like \n summary contains aggregate data about the likes such as total count, and summary information \n such as the N most recent likes.\n\ngenerated from: com.linkedin.ucp.comment.rest.ObjectLikeSummaryResource", 
                        "name": "objectLikeSummaries", 
                        "namespace": "com.linkedin.ucp.like.client", 
                        "path": "/objectLikeSummaries", 
                        "schema": "com.linkedin.ucp.social.ObjectLikeSummary"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "likesBackend", 
                    "models": {
                        "com.linkedin.ucp.Activity": "{ \"type\" : \"record\", \"name\" : \"Activity\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents a raw activity to be published\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"VersionTag\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"A resource-defined string representing the resource state for the purpose of concurrency control\", \"fields\" : [ { \"name\" : \"versionTag\", \"type\" : \"string\", \"optional\" : true } ] } ], \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\", \"doc\" : \"The predefined activity id (used for NUS migration only).\", \"optional\" : true }, { \"name\" : \"actor\", \"type\" : \"string\", \"doc\" : \"An old urn referencing the actor of the activity.\" }, { \"name\" : \"actorUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing the actor of the activity.\", \"optional\" : true, \"derived-from\" : \"actor\" }, { \"name\" : \"verb\", \"type\" : { \"type\" : \"record\", \"name\" : \"Verb\", \"doc\" : \"Activity verb data\", \"fields\" : [ { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered verb.\" }, { \"name\" : \"commentary\", \"type\" : \"string\", \"doc\" : \"Optional field representing the actor's commentary about this activity, if applicable.\", \"optional\" : true }, { \"name\" : \"commentaryAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of verb commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : \"com.linkedin.common.AnyRecord\", \"doc\" : \"Map of custom property key/values\", \"optional\" : true } ] }, \"doc\" : \"The verb of the activity and it's context (commentary and attributes).\" }, { \"name\" : \"object\", \"type\" : \"ObjectSummary\", \"doc\" : \"Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url) of the object.\", \"default\" : { \"locale\" : \"en_US\" }, \"optional\" : true }, { \"name\" : \"target\", \"type\" : \"ObjectSummary\", \"doc\" : \"A urn referencing larger collection/container the 'object' is part of.  When present, the statement becomes <actor> <verb> <object> to/in/preposition <target>.  E.g. Bob posted a movie review for Inception.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\", \"doc\" : \"A urn referencing the application that published the activity.\" }, { \"name\" : \"spaces\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"The spaces in which the update is tagged; for example, you can tag an update as belonging to a members feed\", \"optional\" : true }, { \"name\" : \"visibility\", \"type\" : { \"type\" : \"record\", \"name\" : \"ActivityVisibility\", \"doc\" : \"Represents the access control rules for a given update\", \"fields\" : [ { \"name\" : \"public\", \"type\" : \"boolean\", \"doc\" : \"Global flag which indicates that this update is globally visibile\", \"default\" : false, \"optional\" : true }, { \"name\" : \"network\", \"type\" : { \"type\" : \"enum\", \"name\" : \"NetworkVisibility\", \"symbols\" : [ \"CONNECTIONS\", \"SECOND_DEGREE\" ] }, \"doc\" : \"Permit a given network access to this update; the actor for this update must be a LinkedIn member\", \"optional\" : true }, { \"name\" : \"include\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Permits a list of supported entities access to this update\", \"optional\" : true }, { \"name\" : \"exclude\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Overrides all previous rules to exclude access for a set of supported entities\", \"optional\" : true } ] }, \"doc\" : \"Visibility attached to this activity.  Explicitly sets the access control rules for this activity.\", \"default\" : { \"public\" : false } }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"keywords\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Search keywords relevant to this activity.\", \"optional\" : true }, { \"name\" : \"validAfter\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is first valid.  The activity will not be displayed until this time.\", \"optional\" : true }, { \"name\" : \"validUntil\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is last valid.  The activity will not be diplayed after this time.\", \"optional\" : true }, { \"name\" : \"actions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityAction\", \"doc\" : \"A call to action\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"URL the viewer will navigate to when they take this action.\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"English label for this action\" }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"This is the canonical representation of this action that will not be used in i18n\", \"optional\" : true }, { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"This can be used as an i18n resource key\", \"optional\" : true } ] } }, \"doc\" : \"A urn referencing a activity specific action to be included with the actions displayed in addition to the standard actions.\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Locale\", \"default\" : { \"language\" : \"en\" } }, { \"name\" : \"useObjectIdAsThreadId\", \"type\" : \"boolean\", \"doc\" : \"For comments on this activity, this flag indicates if the object Id should be the thread Id or the activity id itself should be used as the thread Id.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"sponsored\", \"type\" : \"boolean\", \"doc\" : \"Indicates that the activity is paid for by a sponsor.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"trackingMetadata\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Map of additional metadata used for client tracking. Entry key is tracking source. Entry value can be used to send webtrack events.\", \"optional\" : true }, { \"name\" : \"topicScores\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Topics associated with the object and a score on a [0..1] scale.  May be rounder if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"nusReputationScore\", \"type\" : \"float\", \"doc\" : \"Reputation score for this event's actor, 0.0 if one was not assigned to the actor of this event.\", \"default\" : 0.0, \"optional\" : true }, { \"name\" : \"deduplicationMetadata\", \"type\" : { \"type\" : \"record\", \"name\" : \"DeduplicationMetadata\", \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"fields\" : [ { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"A unique key to which all events satisfying the same de-duplication criteria are mapped.\", \"optional\" : true }, { \"name\" : \"category\", \"type\" : { \"type\" : \"enum\", \"name\" : \"DeduplicationCategory\", \"doc\" : \"Whether, within the same de-duplication group (identified by a common key), this event should be prioritized for being filtered out. ACTIVE events are always preferred over PASSIVE events, but with multiple ACTIVE events whichever event comes first will be preferred.\", \"symbols\" : [ \"ACTIVE\", \"PASSIVE\" ] }, \"optional\" : true } ] }, \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"optional\" : true } ], \"version\" : 10 }", 
                        "com.linkedin.ucp.social.Like": "{ \"type\" : \"record\", \"name\" : \"Like\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"A 'like' (recommendation) object. This is a lightweight association between an actor and the recommended item e.g. an 'edge' in the 'interest graph'\", \"fields\" : [ { \"name\" : \"actorId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"actorUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"optional\" : true, \"derived-from\" : \"actorId\" }, { \"name\" : \"objectId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"objectUrn\", \"type\" : \"com.linkedin.common.Urn\", \"optional\" : true, \"derived-from\" : \"objectId\" }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"actor\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"optional\" : true }, { \"name\" : \"active\", \"type\" : \"boolean\", \"default\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"level\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"pathToRoot\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Contains the parent hierarchy.\", \"optional\" : true, \"indexType\" : \"attribute\" } ], \"version\" : 8 }"
                    }, 
                    "path": "/likes", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "association": {
                            "assocKeys": [
                                {
                                    "name": "actorId", 
                                    "type": "string"
                                }, 
                                {
                                    "name": "objectId", 
                                    "type": "string"
                                }
                            ], 
                            "entity": {
                                "actions": [
                                    {
                                        "doc": "Create a corresponding viral activity for specified like.  The generated activity will use the like as the\n actor, \"linkedin:like\" as the verb, and the threadID as the object.\n\n This does not work without read after write consistency in Espresso", 
                                        "name": "createLikeActivity", 
                                        "returns": "com.linkedin.ucp.Activity"
                                    }, 
                                    {
                                        "doc": "Create a like and publishes a corresponding viral activity for specified like.  The generated activity will use the like as the\n actor, \"linkedin:like\" as the verb, and the threadID as the object.", 
                                        "name": "createLikeAndPublishActivity", 
                                        "parameters": [
                                            {
                                                "name": "attributedActivity", 
                                                "optional": true, 
                                                "type": "string"
                                            }
                                        ], 
                                        "returns": "string"
                                    }
                                ], 
                                "path": "/likes/objectId={objectId}&actorId={actorId}"
                            }, 
                            "finders": [
                                {
                                    "assocKeys": [
                                        "actorId"
                                    ], 
                                    "name": "actorFiltered", 
                                    "parameters": [
                                        {
                                            "name": "objectIdsList", 
                                            "type": "string"
                                        }
                                    ]
                                }, 
                                {
                                    "assocKeys": [
                                        "actorId"
                                    ], 
                                    "name": "actorFilteredByIds", 
                                    "parameters": [
                                        {
                                            "name": "objectIdsList", 
                                            "type": "{ \"type\" : \"array\", \"items\" : \"string\" }"
                                        }
                                    ]
                                }, 
                                {
                                    "assocKeys": [
                                        "objectId"
                                    ], 
                                    "doc": "Finds all likes by a given object.", 
                                    "name": "object"
                                }
                            ], 
                            "methods": [
                                {
                                    "doc": "Get a like, if it exists between the actor and object.", 
                                    "method": "get"
                                }, 
                                {
                                    "doc": "Updates a like for a given actor and object.", 
                                    "method": "update"
                                }, 
                                {
                                    "doc": "Removes a like (\"unlikes\") between an actor and object.", 
                                    "method": "delete"
                                }, 
                                {
                                    "doc": "Get multiple likes, if they exist between the actors and objects.", 
                                    "method": "batch_get"
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "delete", 
                                "get", 
                                "update"
                            ]
                        }, 
                        "doc": "Collection of likes modeled as associations between an actor and the object they liked.\n\ngenerated from: com.linkedin.ucp.comment.rest.LikesResource", 
                        "name": "likes", 
                        "namespace": "com.linkedin.ucp.like.client", 
                        "path": "/likes", 
                        "schema": "com.linkedin.ucp.social.Like"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "relevancePreferencesBackend", 
                    "models": {
                        "com.linkedin.ucp.query.RelevancePreferences": "{ \"type\" : \"record\", \"name\" : \"RelevancePreferences\", \"namespace\" : \"com.linkedin.ucp.query\", \"doc\" : \"Stores member preferences for relevance, blacklisting, etc.\", \"fields\" : [ { \"name\" : \"member\", \"type\" : \"string\", \"doc\" : \"URN referencing linkedin.com member to which preferences are attached.\" }, { \"name\" : \"blacklistedMembers\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"List of member IDs (not URNs) to blacklist.\", \"optional\" : true }, { \"name\" : \"blacklistedVerbs\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"List of verb URNs to blacklist.\", \"optional\" : true }, { \"name\" : \"blacklistedApps\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"List of app IDs to blacklist.\", \"optional\" : true } ], \"version\" : 2 }"
                    }, 
                    "path": "/relevancePreferences", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "path": "/relevancePreferences/{member}"
                            }, 
                            "identifier": {
                                "name": "member", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "method": "get"
                                }, 
                                {
                                    "doc": "Patch operation.\n How to create a patch: https://iwww.corp.linkedin.com/wiki/cf/display/ENGS/Partial+Update", 
                                    "method": "partial_update"
                                }
                            ], 
                            "supports": [
                                "get", 
                                "partial_update"
                            ]
                        }, 
                        "doc": "Member relevance preferences endpoint.  Stores member preferences for relevance, blacklisting, etc.\n\ngenerated from: com.linkedin.ucp.query.rest.RelevancePreferencesResource", 
                        "name": "relevancePreferences", 
                        "namespace": "com.linkedin.ucp.query.client", 
                        "path": "/relevancePreferences", 
                        "schema": "com.linkedin.ucp.query.RelevancePreferences"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "activitiesBackend", 
                    "models": {
                        "com.linkedin.ucp.Activity": "{ \"type\" : \"record\", \"name\" : \"Activity\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents a raw activity to be published\", \"include\" : [ { \"type\" : \"record\", \"name\" : \"VersionTag\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"A resource-defined string representing the resource state for the purpose of concurrency control\", \"fields\" : [ { \"name\" : \"versionTag\", \"type\" : \"string\", \"optional\" : true } ] } ], \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\", \"doc\" : \"The predefined activity id (used for NUS migration only).\", \"optional\" : true }, { \"name\" : \"actor\", \"type\" : \"string\", \"doc\" : \"An old urn referencing the actor of the activity.\" }, { \"name\" : \"actorUrn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing the actor of the activity.\", \"optional\" : true, \"derived-from\" : \"actor\" }, { \"name\" : \"verb\", \"type\" : { \"type\" : \"record\", \"name\" : \"Verb\", \"doc\" : \"Activity verb data\", \"fields\" : [ { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered verb.\" }, { \"name\" : \"commentary\", \"type\" : \"string\", \"doc\" : \"Optional field representing the actor's commentary about this activity, if applicable.\", \"optional\" : true }, { \"name\" : \"commentaryAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of verb commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : \"com.linkedin.common.AnyRecord\", \"doc\" : \"Map of custom property key/values\", \"optional\" : true } ] }, \"doc\" : \"The verb of the activity and it's context (commentary and attributes).\" }, { \"name\" : \"object\", \"type\" : \"ObjectSummary\", \"doc\" : \"Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url) of the object.\", \"default\" : { \"locale\" : \"en_US\" }, \"optional\" : true }, { \"name\" : \"target\", \"type\" : \"ObjectSummary\", \"doc\" : \"A urn referencing larger collection/container the 'object' is part of.  When present, the statement becomes <actor> <verb> <object> to/in/preposition <target>.  E.g. Bob posted a movie review for Inception.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\", \"doc\" : \"A urn referencing the application that published the activity.\" }, { \"name\" : \"spaces\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"The spaces in which the update is tagged; for example, you can tag an update as belonging to a members feed\", \"optional\" : true }, { \"name\" : \"visibility\", \"type\" : { \"type\" : \"record\", \"name\" : \"ActivityVisibility\", \"doc\" : \"Represents the access control rules for a given update\", \"fields\" : [ { \"name\" : \"public\", \"type\" : \"boolean\", \"doc\" : \"Global flag which indicates that this update is globally visibile\", \"default\" : false, \"optional\" : true }, { \"name\" : \"network\", \"type\" : { \"type\" : \"enum\", \"name\" : \"NetworkVisibility\", \"symbols\" : [ \"CONNECTIONS\", \"SECOND_DEGREE\" ] }, \"doc\" : \"Permit a given network access to this update; the actor for this update must be a LinkedIn member\", \"optional\" : true }, { \"name\" : \"include\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Permits a list of supported entities access to this update\", \"optional\" : true }, { \"name\" : \"exclude\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Overrides all previous rules to exclude access for a set of supported entities\", \"optional\" : true } ] }, \"doc\" : \"Visibility attached to this activity.  Explicitly sets the access control rules for this activity.\", \"default\" : { \"public\" : false } }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"keywords\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Search keywords relevant to this activity.\", \"optional\" : true }, { \"name\" : \"validAfter\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is first valid.  The activity will not be displayed until this time.\", \"optional\" : true }, { \"name\" : \"validUntil\", \"type\" : \"long\", \"doc\" : \"Millis since epoch.  The time the activity is last valid.  The activity will not be diplayed after this time.\", \"optional\" : true }, { \"name\" : \"actions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityAction\", \"doc\" : \"A call to action\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"URL the viewer will navigate to when they take this action.\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"English label for this action\" }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"This is the canonical representation of this action that will not be used in i18n\", \"optional\" : true }, { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"This can be used as an i18n resource key\", \"optional\" : true } ] } }, \"doc\" : \"A urn referencing a activity specific action to be included with the actions displayed in addition to the standard actions.\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Locale\", \"default\" : { \"language\" : \"en\" } }, { \"name\" : \"useObjectIdAsThreadId\", \"type\" : \"boolean\", \"doc\" : \"For comments on this activity, this flag indicates if the object Id should be the thread Id or the activity id itself should be used as the thread Id.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"sponsored\", \"type\" : \"boolean\", \"doc\" : \"Indicates that the activity is paid for by a sponsor.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"trackingMetadata\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Map of additional metadata used for client tracking. Entry key is tracking source. Entry value can be used to send webtrack events.\", \"optional\" : true }, { \"name\" : \"topicScores\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Topics associated with the object and a score on a [0..1] scale.  May be rounder if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"nusReputationScore\", \"type\" : \"float\", \"doc\" : \"Reputation score for this event's actor, 0.0 if one was not assigned to the actor of this event.\", \"default\" : 0.0, \"optional\" : true }, { \"name\" : \"deduplicationMetadata\", \"type\" : { \"type\" : \"record\", \"name\" : \"DeduplicationMetadata\", \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"fields\" : [ { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"A unique key to which all events satisfying the same de-duplication criteria are mapped.\", \"optional\" : true }, { \"name\" : \"category\", \"type\" : { \"type\" : \"enum\", \"name\" : \"DeduplicationCategory\", \"doc\" : \"Whether, within the same de-duplication group (identified by a common key), this event should be prioritized for being filtered out. ACTIVE events are always preferred over PASSIVE events, but with multiple ACTIVE events whichever event comes first will be preferred.\", \"symbols\" : [ \"ACTIVE\", \"PASSIVE\" ] }, \"optional\" : true } ] }, \"doc\" : \"Information used to assist in de-duplicating semantically related events.\", \"optional\" : true } ], \"version\" : 10 }", 
                        "com.linkedin.ucp.ActivityVisibility": "{ \"type\" : \"record\", \"name\" : \"ActivityVisibility\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents the access control rules for a given update\", \"fields\" : [ { \"name\" : \"public\", \"type\" : \"boolean\", \"doc\" : \"Global flag which indicates that this update is globally visibile\", \"default\" : false, \"optional\" : true }, { \"name\" : \"network\", \"type\" : { \"type\" : \"enum\", \"name\" : \"NetworkVisibility\", \"symbols\" : [ \"CONNECTIONS\", \"SECOND_DEGREE\" ] }, \"doc\" : \"Permit a given network access to this update; the actor for this update must be a LinkedIn member\", \"optional\" : true }, { \"name\" : \"include\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Permits a list of supported entities access to this update\", \"optional\" : true }, { \"name\" : \"exclude\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Overrides all previous rules to exclude access for a set of supported entities\", \"optional\" : true } ] }"
                    }, 
                    "path": "/activities", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "actions": [
                                    {
                                        "name": "createReshareActivity", 
                                        "parameters": [
                                            {
                                                "name": "actorUrn", 
                                                "type": "string"
                                            }, 
                                            {
                                                "name": "commentary", 
                                                "optional": true, 
                                                "type": "string"
                                            }, 
                                            {
                                                "name": "visibility", 
                                                "optional": true, 
                                                "type": "com.linkedin.ucp.ActivityVisibility"
                                            }, 
                                            {
                                                "name": "attributedActivity", 
                                                "optional": true, 
                                                "type": "string"
                                            }
                                        ], 
                                        "returns": "com.linkedin.ucp.Activity"
                                    }, 
                                    {
                                        "name": "unmention", 
                                        "parameters": [
                                            {
                                                "name": "actorUrn", 
                                                "type": "string"
                                            }
                                        ]
                                    }
                                ], 
                                "path": "/activities/{id}"
                            }, 
                            "identifier": {
                                "name": "id", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "doc": "'Create' publishes new activity into USCP.\n\n For details on how to construct the 'Activity' model to be posted see USCPs main documentation and the 'Activity' pegasus model's documentation.", 
                                    "method": "create"
                                }, 
                                {
                                    "doc": "Get's a published activity in the raw format with which is was published.\n\n This is largely available for testing and editing activities.\n VersionTag is added for optimistic locking and concurrency control.\n See ActivityViewsResource for lookup and query of fully decorated activity.", 
                                    "method": "get"
                                }, 
                                {
                                    "doc": "Only certain fields are mutable in USCP activities.  For now, they are:\n - Spaces\n - Visibility", 
                                    "method": "partial_update", 
                                    "parameters": [
                                        {
                                            "doc": "Used for concurrency control. Method will return 409 when there is a optimistic lock exception.", 
                                            "name": "versionTag", 
                                            "optional": true, 
                                            "type": "string"
                                        }
                                    ]
                                }, 
                                {
                                    "doc": "Deletes a published activity from USCP.  Use sparingly;  once activity is published it may, depending on the privacy and visibility rules of the activity,\n be messaged both to systems both inside and 3rd party applications not under the control of linkedin.  We will send the delete request on to 3rd party\n applications where possible, but we cannot guarentee the delete request will be respected or executed promptly by 3rd party applications.", 
                                    "method": "delete"
                                }, 
                                {
                                    "method": "batch_get"
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "create", 
                                "delete", 
                                "get", 
                                "partial_update"
                            ]
                        }, 
                        "doc": "Activity publication endpoint. Supports get, create and delete, though 'get' is generally not very useful.\n\n To publish new activity into USCP, POST to this resource (see 'create').\n\ngenerated from: com.linkedin.ucp.publish.rest.ActivitiesResource", 
                        "name": "activities", 
                        "namespace": "com.linkedin.ucp.publish.client", 
                        "path": "/activities", 
                        "schema": "com.linkedin.ucp.Activity"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "actorHidesBackend", 
                    "path": "/actorHides", 
                    "protocol": "REST"
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "activitycommentsBackend", 
                    "path": "/activitycomments", 
                    "protocol": "REST"
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "contentSummariesBackend", 
                    "models": {
                        "com.linkedin.ucp.ContentSummary": "{ \"type\" : \"record\", \"name\" : \"ContentSummary\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents a raw content summary to be published\", \"fields\" : [ { \"name\" : \"object\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] }, \"default\" : { \"locale\" : \"en_US\" }, \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\", \"doc\" : \"A urn referencing the application that published the activity.\" }, { \"name\" : \"topicScores\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Topics associated with the object and a score on a [0..1] scale. May be rounder if greater than 0.001 precision.\", \"optional\" : true } ] }"
                    }, 
                    "path": "/contentSummaries", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "entity": {
                                "path": "/contentSummaries/{id}"
                            }, 
                            "identifier": {
                                "name": "id", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "doc": "'Create' publishes new contentSummaries into USCP.\n\n For details on how to construct the 'ContentSummary' model to be posted see USCPs main documentation and the 'ContentSummary' pegasus model's documentation.", 
                                    "method": "create"
                                }, 
                                {
                                    "doc": "Get's a published contentSummary in the raw format with which is was published.\n\n This is largely available for testing, see ContentSummaryViewsResource for lookup and query of fully decorated activity.", 
                                    "method": "get"
                                }
                            ], 
                            "supports": [
                                "create", 
                                "get"
                            ]
                        }, 
                        "doc": "ContentSummary publication endpoint. Supports get, create and delete, though 'get' is generally not very useful.\n\ngenerated from: com.linkedin.ucp.publish.rest.ContentSummariesResource", 
                        "name": "contentSummaries", 
                        "namespace": "com.linkedin.ucp.publish.client", 
                        "path": "/contentSummaries", 
                        "schema": "com.linkedin.ucp.ContentSummary"
                    }
                }, 
                {
                    "createdAt":1369851355182,"modifiedAt":1369851355274,
                    "clusters": [
                        {
                            "name": "UscpBackend", 
                            "servers": [
                                "http://eat1-app592.stg.linkedin.com:11337/uscp-backend", 
                                "http://eat1-app747.stg.linkedin.com:11337/uscp-backend"
                            ]
                        }
                    ], 
                    "key": "activityViewsBackend", 
                    "models": {
                        "com.linkedin.ucp.ActivityView": "{ \"type\" : \"record\", \"name\" : \"ActivityView\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents an activity query result\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"ID is the old URN format\" }, { \"name\" : \"urn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"urn is the standard URN\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"active\", \"type\" : \"boolean\", \"default\" : true }, { \"name\" : \"actor\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] } }, { \"name\" : \"verb\", \"type\" : { \"type\" : \"record\", \"name\" : \"Verb\", \"doc\" : \"Activity verb data\", \"fields\" : [ { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered verb.\" }, { \"name\" : \"commentary\", \"type\" : \"string\", \"doc\" : \"Optional field representing the actor's commentary about this activity, if applicable.\", \"optional\" : true }, { \"name\" : \"commentaryAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : \"ObjectSummary\", \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of verb commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : \"com.linkedin.common.AnyRecord\", \"doc\" : \"Map of custom property key/values\", \"optional\" : true } ] } }, { \"name\" : \"object\", \"type\" : [ \"ObjectSummary\", \"ActivityView\" ] }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Language Locale\", \"default\" : { \"language\" : \"en_US\" } }, { \"name\" : \"spaces\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" } }, { \"name\" : \"visibility\", \"type\" : { \"type\" : \"record\", \"name\" : \"ActivityVisibility\", \"doc\" : \"Represents the access control rules for a given update\", \"fields\" : [ { \"name\" : \"public\", \"type\" : \"boolean\", \"doc\" : \"Global flag which indicates that this update is globally visibile\", \"default\" : false, \"optional\" : true }, { \"name\" : \"network\", \"type\" : { \"type\" : \"enum\", \"name\" : \"NetworkVisibility\", \"symbols\" : [ \"CONNECTIONS\", \"SECOND_DEGREE\" ] }, \"doc\" : \"Permit a given network access to this update; the actor for this update must be a LinkedIn member\", \"optional\" : true }, { \"name\" : \"include\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Permits a list of supported entities access to this update\", \"optional\" : true }, { \"name\" : \"exclude\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Overrides all previous rules to exclude access for a set of supported entities\", \"optional\" : true } ] } }, { \"name\" : \"createdDate\", \"type\" : \"long\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"threadId\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"validAfter\", \"type\" : \"long\", \"optional\" : true }, { \"name\" : \"validUntil\", \"type\" : \"long\", \"optional\" : true }, { \"name\" : \"attributedActivity\", \"type\" : \"ActivityView\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"ObjectSummary\", \"default\" : { \"locale\" : \"en_US\" } }, { \"name\" : \"body\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"target\", \"type\" : \"ObjectSummary\", \"optional\" : true }, { \"name\" : \"sponsored\", \"type\" : \"boolean\", \"doc\" : \"Indicates that the activity is paid for by a sponsor.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"trackingMetadata\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Map of additional metadata used for client tracking. Entry key is tracking source. Entry value can be used to send webtrack events.\", \"optional\" : true }, { \"name\" : \"bodyAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : \"Annotation\" } }, { \"name\" : \"socialSummary\", \"type\" : { \"type\" : \"record\", \"name\" : \"SocialSummary\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"Summary of the social gestures for a given activity\", \"fields\" : [ { \"name\" : \"totalComments\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recentComments\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Comment\", \"doc\" : \"A comment object\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\" }, { \"name\" : \"threadId\", \"type\" : \"string\", \"doc\" : \"The root-level object/activity for the comment. For threaded comments, this is the ID of the root of the thread\" }, { \"name\" : \"threadAuthorId\", \"type\" : \"string\", \"doc\" : \"Author Id of the activity which this comment belongs to, used by anti-spam engine \", \"optional\" : true }, { \"name\" : \"parentCommentId\", \"type\" : \"long\", \"doc\" : \"For nested comments, this is the id of the parent comment. This will be 0 for first-level comments\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"pathToRoot\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Contains the parent hierarchy. For top-level comments, this is just the threadId\", \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"level\", \"type\" : \"int\", \"doc\" : \"Nesting level for the comment. Top-level comments have this set to 1 and so on\", \"default\" : 1, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\" }, { \"name\" : \"commenterId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"commenterUrn\", \"type\" : \"com.linkedin.common.Urn\", \"optional\" : true, \"derived-from\" : \"commenterId\" }, { \"name\" : \"commenter\", \"type\" : \"com.linkedin.ucp.ObjectSummary\", \"optional\" : true }, { \"name\" : \"message\", \"type\" : \"string\", \"doc\" : \"Stores the comment message.\" }, { \"name\" : \"messageAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.Annotation\" }, \"doc\" : \"A (possibly decorated) array of commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"objects\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"doc\" : \"Allows attachment of rich objects to comments.\", \"optional\" : true }, { \"name\" : \"likes\", \"type\" : { \"type\" : \"record\", \"name\" : \"VerbSocialSummary\", \"doc\" : \"Summary of the social gestures for a given verb\", \"fields\" : [ { \"name\" : \"total\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recent\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"actedOnByCurrentUser\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true } ] } }, { \"name\" : \"spam\", \"type\" : { \"type\" : \"record\", \"name\" : \"Spam\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Spam information\", \"fields\" : [ { \"name\" : \"state\", \"type\" : \"boolean\", \"doc\" : \"State is true if this is a spam, false otherwise\", \"default\" : false }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if an the decision is by an admin user, false otherwise\", \"default\" : false }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"Type of spam, such as job, event, etc\", \"default\" : \"none\" }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the spam, either classifier or a particular admin member id\", \"default\" : \"classifier\" } ] }, \"optional\" : true }, { \"name\" : \"markedAsSpam\", \"type\" : \"boolean\", \"doc\" : \"used to mark the comment as spam\", \"default\" : false, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"flags\", \"type\" : \"VerbSocialSummary\", \"optional\" : true }, { \"name\" : \"active\", \"type\" : \"boolean\", \"doc\" : \"used to soft-delete the comment\", \"default\" : true }, { \"name\" : \"deletedBy\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\", \"indexType\" : \"attribute\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"urn\", \"type\" : \"string\", \"doc\" : \"The old URN reference for this comment.\" }, { \"name\" : \"urnStd\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"The standard URN reference for this comment.\", \"optional\" : true, \"derived-from\" : \"urn\" }, { \"name\" : \"relativePosition\", \"type\" : \"int\" }, { \"name\" : \"totalFirstLevelComments\", \"type\" : \"int\", \"doc\" : \"Number of first-level comments on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"doc\" : \"Number of likes on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"aggregatedTotalLikes\", \"type\" : \"int\", \"doc\" : \"Total number of likes on this comment, including multi-level nested comments. Populated only for comments with level=1\", \"default\" : 0, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"nestedComments\", \"type\" : { \"type\" : \"array\", \"items\" : \"Comment\" }, \"doc\" : \"Comments nested within this comment. Only a configurable number of recent nested comments are always returned. The return value from the USCP comment API may include all or a different partial set of nested comments depending on the API request parameters\", \"default\" : [  ], \"optional\" : true } ], \"version\" : 16 } }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recentLikes\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"doc\" : \"An array of person\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"likedByCurrentUser\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true }, { \"name\" : \"totalShares\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"verbSummaries\", \"type\" : { \"type\" : \"map\", \"values\" : \"VerbSocialSummary\" }, \"doc\" : \"Collection of social summaries for verbs which acted on this activity.\", \"default\" : {  }, \"optional\" : true } ] }, \"default\" : {  } }, { \"name\" : \"actions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityAction\", \"doc\" : \"A call to action\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"URL the viewer will navigate to when they take this action.\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"English label for this action\" }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"This is the canonical representation of this action that will not be used in i18n\", \"optional\" : true }, { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"This can be used as an i18n resource key\", \"optional\" : true } ] } }, \"default\" : [  ] }, { \"name\" : \"similarActivitiesBody\", \"type\" : \"string\", \"default\" : \"\" }, { \"name\" : \"similarActivitiesBodyAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : \"Annotation\" }, \"default\" : [  ] }, { \"name\" : \"similarActivities\", \"type\" : { \"type\" : \"array\", \"items\" : \"ActivityView\" }, \"default\" : [  ] }, { \"name\" : \"totalSimilarActivities\", \"type\" : \"long\", \"optional\" : true }, { \"name\" : \"aggregationType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"AggregationType\", \"symbols\" : [ \"ACTOR_VERB\", \"VERB_OBJECT\", \"VERB_ONLY\", \"ACTOR_ONLY\", \"OTHER\" ] }, \"doc\" : \"Indicate how similar activities are aggregated.\", \"optional\" : true }, { \"name\" : \"layout\", \"type\" : [ { \"type\" : \"record\", \"name\" : \"BasicLayout\", \"namespace\" : \"com.linkedin.ucp.apps.layouts\", \"doc\" : \"Basic layout which contains an image, a headline, a summary, and the domain\", \"fields\" : [ { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Image\", \"doc\" : \"Layout element representing an image\", \"fields\" : [ { \"name\" : \"_source\", \"type\" : \"string\" }, { \"name\" : \"_onHover\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"_onClick\", \"type\" : \"string\", \"optional\" : true } ] } }, { \"name\" : \"domain\", \"type\" : { \"type\" : \"record\", \"name\" : \"Label\", \"doc\" : \"Layout element representing a block of text\", \"fields\" : [ { \"name\" : \"_text\", \"type\" : \"string\" }, { \"name\" : \"_onClick\", \"type\" : \"string\", \"optional\" : true } ] } }, { \"name\" : \"headline\", \"type\" : \"Label\" }, { \"name\" : \"summary\", \"type\" : \"Label\" } ] } ], \"doc\" : \"The layout model for this particular activity\", \"optional\" : true }, { \"name\" : \"relevanceScore\", \"type\" : \"double\", \"doc\" : \"The score for the particular model\", \"default\" : 0.0 } ] }", 
                        "com.linkedin.ucp.ActivityViewsQueryResult": "{ \"type\" : \"record\", \"name\" : \"ActivityViewsQueryResult\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"A feed to be referenced in a UCP application\", \"fields\" : [ { \"name\" : \"elements\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityView\", \"doc\" : \"Represents an activity query result\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"ID is the old URN format\" }, { \"name\" : \"urn\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } }, \"doc\" : \"urn is the standard URN\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"active\", \"type\" : \"boolean\", \"default\" : true }, { \"name\" : \"actor\", \"type\" : { \"type\" : \"record\", \"name\" : \"ObjectSummary\", \"doc\" : \"Activity object data.  Either a urn referencing the object of the activity, set with id field, or a content summary (title, description, image, url, type and attributes) of the object.\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\", \"doc\" : \"A old urn format referencing an object OR a url referencing an opengraph object.\", \"optional\" : true }, { \"name\" : \"urn\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"A standard urn referencing an object OR a url referencing an opengraph object.\", \"optional\" : true, \"derived-from\" : \"id\" }, { \"name\" : \"title\", \"type\" : \"string\", \"doc\" : \"Title of the object.\", \"optional\" : true }, { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A permalink to the object, if applicable.\", \"optional\" : true }, { \"name\" : \"description\", \"type\" : \"string\", \"doc\" : \"A short description of the object, if applicable.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered object type, if applicable.\", \"optional\" : true }, { \"name\" : \"determiner\", \"type\" : \"string\", \"doc\" : \"The word that appears before this object's title in a sentence. An enum of (a, an, the, '', auto). If auto is chosen, the consumer of your data should chose between 'a' or 'an'. Default is '' (blank).\", \"optional\" : true }, { \"name\" : \"locale\", \"type\" : \"string\", \"doc\" : \"The locale these tags are marked up in. Of the format language_TERRITORY. Default is en_US.\", \"default\" : \"en_US\", \"optional\" : true }, { \"name\" : \"locale_alternate\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"site_name\", \"type\" : \"string\", \"doc\" : \"If your object is part of a larger web site, the name which should be displayed for the overall site. e.g., 'IMDb'.\", \"optional\" : true }, { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Media\", \"namespace\" : \"com.linkedin.ucp.types\", \"doc\" : \"Describes Open Graph media types (audio, image, video).\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"A url to a media asset, if applicable.\", \"optional\" : true }, { \"name\" : \"secure_url\", \"type\" : \"string\", \"doc\" : \"An alternate url to use if the webpage requires HTTPS.\", \"optional\" : true }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A MIME type for asset.\", \"optional\" : true }, { \"name\" : \"width\", \"type\" : \"int\", \"doc\" : \"The number of pixels wide.\", \"optional\" : true }, { \"name\" : \"height\", \"type\" : \"int\", \"doc\" : \"The number of pixels high.\", \"optional\" : true } ] }, \"doc\" : \"A reference to an image, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"video\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to a video, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"audio\", \"type\" : \"com.linkedin.ucp.types.Media\", \"doc\" : \"A reference to an audio, if applicable.  Must not be set if 'id' field is set.\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"doc\" : \"Map of custom property key/values\", \"optional\" : true }, { \"name\" : \"duplicateId\", \"type\" : \"string\", \"doc\" : \"Object Id of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true }, { \"name\" : \"duplicateUrn\", \"type\" : \"string\", \"doc\" : \"Object urn of one of the object summaries from the near duplicate group this object summary is a member of, if any.  When duplicates are filtered, only the objectSummary with it's id equal to it's duplicateId will be displayed.\", \"optional\" : true, \"derived-from\" : \"duplicateId\" }, { \"name\" : \"qualityScore\", \"type\" : \"string\", \"doc\" : \"Quality score of the content, must be a decimal value on a [0, 1] scale.  May be rounded if greater than 0.001 precision.\", \"optional\" : true }, { \"name\" : \"isGoodQuality\", \"type\" : { \"type\" : \"record\", \"name\" : \"ScoredBoolean\", \"doc\" : \"A boolean value with score. Score represents a value between true (1) and false (0), but the midpoint is not necessarily 0.5\", \"fields\" : [ { \"name\" : \"value\", \"type\" : \"boolean\", \"default\" : false }, { \"name\" : \"score\", \"type\" : \"float\", \"default\" : 0.0 } ], \"version\" : 1 }, \"doc\" : \"Indicates this content is good quality\", \"optional\" : true }, { \"name\" : \"isSpam\", \"type\" : \"ScoredBoolean\", \"doc\" : \"Indicates this content is spam\", \"optional\" : true } ] } }, { \"name\" : \"verb\", \"type\" : { \"type\" : \"record\", \"name\" : \"Verb\", \"doc\" : \"Activity verb data\", \"fields\" : [ { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"A urn referencing a registered verb.\" }, { \"name\" : \"commentary\", \"type\" : \"string\", \"doc\" : \"Optional field representing the actor's commentary about this activity, if applicable.\", \"optional\" : true }, { \"name\" : \"commentaryAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Annotation\", \"doc\" : \"Semantic annotations for a block of text\", \"fields\" : [ { \"name\" : \"entity\", \"type\" : \"ObjectSummary\", \"doc\" : \"The entity identified in the text referenced by the AnnotationRange.\" }, { \"name\" : \"range\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnnotationRange\", \"fields\" : [ { \"name\" : \"start\", \"type\" : \"int\", \"doc\" : \"Start position in the text for this entity (inclusive)\" }, { \"name\" : \"end\", \"type\" : \"int\", \"doc\" : \"End position in the text for this entity (exclusive)\" } ] }, \"doc\" : \"A region of text identified by a start and end offset.\" } ] } }, \"doc\" : \"A (possibly decorated) array of verb commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"properties\", \"type\" : \"com.linkedin.common.AnyRecord\", \"doc\" : \"Map of custom property key/values\", \"optional\" : true } ] } }, { \"name\" : \"object\", \"type\" : [ \"ObjectSummary\", \"ActivityView\" ] }, { \"name\" : \"locale\", \"type\" : { \"type\" : \"record\", \"name\" : \"Locale\", \"namespace\" : \"com.linkedin.common.proposed\", \"doc\" : \"Promoted to com.linkedin.common\", \"fields\" : [ { \"name\" : \"language\", \"type\" : \"string\" }, { \"name\" : \"country\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"variant\", \"type\" : \"string\", \"optional\" : true } ], \"deprecated\" : true }, \"doc\" : \"Language Locale\", \"default\" : { \"language\" : \"en_US\" } }, { \"name\" : \"spaces\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" } }, { \"name\" : \"visibility\", \"type\" : { \"type\" : \"record\", \"name\" : \"ActivityVisibility\", \"doc\" : \"Represents the access control rules for a given update\", \"fields\" : [ { \"name\" : \"public\", \"type\" : \"boolean\", \"doc\" : \"Global flag which indicates that this update is globally visibile\", \"default\" : false, \"optional\" : true }, { \"name\" : \"network\", \"type\" : { \"type\" : \"enum\", \"name\" : \"NetworkVisibility\", \"symbols\" : [ \"CONNECTIONS\", \"SECOND_DEGREE\" ] }, \"doc\" : \"Permit a given network access to this update; the actor for this update must be a LinkedIn member\", \"optional\" : true }, { \"name\" : \"include\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Permits a list of supported entities access to this update\", \"optional\" : true }, { \"name\" : \"exclude\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Overrides all previous rules to exclude access for a set of supported entities\", \"optional\" : true } ] } }, { \"name\" : \"createdDate\", \"type\" : \"long\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"threadId\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"validAfter\", \"type\" : \"long\", \"optional\" : true }, { \"name\" : \"validUntil\", \"type\" : \"long\", \"optional\" : true }, { \"name\" : \"attributedActivity\", \"type\" : \"ActivityView\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"ObjectSummary\", \"default\" : { \"locale\" : \"en_US\" } }, { \"name\" : \"body\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"target\", \"type\" : \"ObjectSummary\", \"optional\" : true }, { \"name\" : \"sponsored\", \"type\" : \"boolean\", \"doc\" : \"Indicates that the activity is paid for by a sponsor.\", \"default\" : false, \"optional\" : true }, { \"name\" : \"trackingMetadata\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"doc\" : \"Map of additional metadata used for client tracking. Entry key is tracking source. Entry value can be used to send webtrack events.\", \"optional\" : true }, { \"name\" : \"bodyAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : \"Annotation\" } }, { \"name\" : \"socialSummary\", \"type\" : { \"type\" : \"record\", \"name\" : \"SocialSummary\", \"namespace\" : \"com.linkedin.ucp.social\", \"doc\" : \"Summary of the social gestures for a given activity\", \"fields\" : [ { \"name\" : \"totalComments\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recentComments\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"Comment\", \"doc\" : \"A comment object\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"long\" }, { \"name\" : \"threadId\", \"type\" : \"string\", \"doc\" : \"The root-level object/activity for the comment. For threaded comments, this is the ID of the root of the thread\" }, { \"name\" : \"threadAuthorId\", \"type\" : \"string\", \"doc\" : \"Author Id of the activity which this comment belongs to, used by anti-spam engine \", \"optional\" : true }, { \"name\" : \"parentCommentId\", \"type\" : \"long\", \"doc\" : \"For nested comments, this is the id of the parent comment. This will be 0 for first-level comments\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"pathToRoot\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"Contains the parent hierarchy. For top-level comments, this is just the threadId\", \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"level\", \"type\" : \"int\", \"doc\" : \"Nesting level for the comment. Top-level comments have this set to 1 and so on\", \"default\" : 1, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"attributedActivity\", \"type\" : \"string\", \"doc\" : \"A urn referencing the originator.\", \"optional\" : true }, { \"name\" : \"app\", \"type\" : \"string\" }, { \"name\" : \"commenterId\", \"type\" : \"string\", \"indexType\" : \"attribute\" }, { \"name\" : \"commenterUrn\", \"type\" : \"com.linkedin.common.Urn\", \"optional\" : true, \"derived-from\" : \"commenterId\" }, { \"name\" : \"commenter\", \"type\" : \"com.linkedin.ucp.ObjectSummary\", \"optional\" : true }, { \"name\" : \"message\", \"type\" : \"string\", \"doc\" : \"Stores the comment message.\" }, { \"name\" : \"messageAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.Annotation\" }, \"doc\" : \"A (possibly decorated) array of commentary annotations, in the same format as body annotations\", \"optional\" : true }, { \"name\" : \"objects\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"doc\" : \"Allows attachment of rich objects to comments.\", \"optional\" : true }, { \"name\" : \"likes\", \"type\" : { \"type\" : \"record\", \"name\" : \"VerbSocialSummary\", \"doc\" : \"Summary of the social gestures for a given verb\", \"fields\" : [ { \"name\" : \"total\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recent\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"actedOnByCurrentUser\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true } ] } }, { \"name\" : \"spam\", \"type\" : { \"type\" : \"record\", \"name\" : \"Spam\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Spam information\", \"fields\" : [ { \"name\" : \"state\", \"type\" : \"boolean\", \"doc\" : \"State is true if this is a spam, false otherwise\", \"default\" : false }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if an the decision is by an admin user, false otherwise\", \"default\" : false }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"Type of spam, such as job, event, etc\", \"default\" : \"none\" }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the spam, either classifier or a particular admin member id\", \"default\" : \"classifier\" } ] }, \"optional\" : true }, { \"name\" : \"markedAsSpam\", \"type\" : \"boolean\", \"doc\" : \"used to mark the comment as spam\", \"default\" : false, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"flags\", \"type\" : \"VerbSocialSummary\", \"optional\" : true }, { \"name\" : \"active\", \"type\" : \"boolean\", \"doc\" : \"used to soft-delete the comment\", \"default\" : true }, { \"name\" : \"deletedBy\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"createdDate\", \"type\" : \"long\", \"indexType\" : \"attribute\" }, { \"name\" : \"modifiedDate\", \"type\" : \"long\" }, { \"name\" : \"urn\", \"type\" : \"string\", \"doc\" : \"The old URN reference for this comment.\" }, { \"name\" : \"urnStd\", \"type\" : \"com.linkedin.common.Urn\", \"doc\" : \"The standard URN reference for this comment.\", \"optional\" : true, \"derived-from\" : \"urn\" }, { \"name\" : \"relativePosition\", \"type\" : \"int\" }, { \"name\" : \"totalFirstLevelComments\", \"type\" : \"int\", \"doc\" : \"Number of first-level comments on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"doc\" : \"Number of likes on this comment\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"aggregatedTotalLikes\", \"type\" : \"int\", \"doc\" : \"Total number of likes on this comment, including multi-level nested comments. Populated only for comments with level=1\", \"default\" : 0, \"optional\" : true, \"indexType\" : \"attribute\" }, { \"name\" : \"restrictionInfo\", \"type\" : { \"type\" : \"record\", \"name\" : \"RestrictionInfo\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Represents the restrictions on a content.\", \"fields\" : [ { \"name\" : \"restrictions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ContentRestrictionRecord\", \"doc\" : \"Content Restriction Record\", \"fields\" : [ { \"name\" : \"restrictionType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"RestrictionType\", \"symbols\" : [ \"SPAM\", \"GEO\" ] }, \"doc\" : \"The type of restriction on the content. A Restriction type of GEO represents that the content is GEO blocked. A Restriction type of SPAM represents the content is marked as a spam.\" }, { \"name\" : \"restrictionValue\", \"type\" : \"string\", \"doc\" : \"This value is optional and may be empty for certain restriction types like spam.\", \"optional\" : true }, { \"name\" : \"reporter\", \"type\" : \"string\", \"doc\" : \"reporter of the restriction, either classifier or a particular admin member id.\", \"default\" : \"classifier\" }, { \"name\" : \"admin\", \"type\" : \"boolean\", \"doc\" : \"Admin is true if the decision is taken by an admin user, false otherwise.\", \"default\" : false } ] } }, \"default\" : [  ] } ] }, \"optional\" : true }, { \"name\" : \"nestedComments\", \"type\" : { \"type\" : \"array\", \"items\" : \"Comment\" }, \"doc\" : \"Comments nested within this comment. Only a configurable number of recent nested comments are always returned. The return value from the USCP comment API may include all or a different partial set of nested comments depending on the API request parameters\", \"default\" : [  ], \"optional\" : true } ], \"version\" : 16 } }, \"default\" : [  ], \"optional\" : true }, { \"name\" : \"totalLikes\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"recentLikes\", \"type\" : { \"type\" : \"array\", \"items\" : \"com.linkedin.ucp.ObjectSummary\" }, \"doc\" : \"An array of person\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"likedByCurrentUser\", \"type\" : \"boolean\", \"default\" : false, \"optional\" : true }, { \"name\" : \"totalShares\", \"type\" : \"int\", \"default\" : 0, \"optional\" : true }, { \"name\" : \"verbSummaries\", \"type\" : { \"type\" : \"map\", \"values\" : \"VerbSocialSummary\" }, \"doc\" : \"Collection of social summaries for verbs which acted on this activity.\", \"default\" : {  }, \"optional\" : true } ] }, \"default\" : {  } }, { \"name\" : \"actions\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"ActivityAction\", \"doc\" : \"A call to action\", \"fields\" : [ { \"name\" : \"url\", \"type\" : \"string\", \"doc\" : \"URL the viewer will navigate to when they take this action.\" }, { \"name\" : \"label\", \"type\" : \"string\", \"doc\" : \"English label for this action\" }, { \"name\" : \"type\", \"type\" : \"string\", \"doc\" : \"This is the canonical representation of this action that will not be used in i18n\", \"optional\" : true }, { \"name\" : \"key\", \"type\" : \"string\", \"doc\" : \"This can be used as an i18n resource key\", \"optional\" : true } ] } }, \"default\" : [  ] }, { \"name\" : \"similarActivitiesBody\", \"type\" : \"string\", \"default\" : \"\" }, { \"name\" : \"similarActivitiesBodyAnnotations\", \"type\" : { \"type\" : \"array\", \"items\" : \"Annotation\" }, \"default\" : [  ] }, { \"name\" : \"similarActivities\", \"type\" : { \"type\" : \"array\", \"items\" : \"ActivityView\" }, \"default\" : [  ] }, { \"name\" : \"totalSimilarActivities\", \"type\" : \"long\", \"optional\" : true }, { \"name\" : \"aggregationType\", \"type\" : { \"type\" : \"enum\", \"name\" : \"AggregationType\", \"symbols\" : [ \"ACTOR_VERB\", \"VERB_OBJECT\", \"VERB_ONLY\", \"ACTOR_ONLY\", \"OTHER\" ] }, \"doc\" : \"Indicate how similar activities are aggregated.\", \"optional\" : true }, { \"name\" : \"layout\", \"type\" : [ { \"type\" : \"record\", \"name\" : \"BasicLayout\", \"namespace\" : \"com.linkedin.ucp.apps.layouts\", \"doc\" : \"Basic layout which contains an image, a headline, a summary, and the domain\", \"fields\" : [ { \"name\" : \"image\", \"type\" : { \"type\" : \"record\", \"name\" : \"Image\", \"doc\" : \"Layout element representing an image\", \"fields\" : [ { \"name\" : \"_source\", \"type\" : \"string\" }, { \"name\" : \"_onHover\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"_onClick\", \"type\" : \"string\", \"optional\" : true } ] } }, { \"name\" : \"domain\", \"type\" : { \"type\" : \"record\", \"name\" : \"Label\", \"doc\" : \"Layout element representing a block of text\", \"fields\" : [ { \"name\" : \"_text\", \"type\" : \"string\" }, { \"name\" : \"_onClick\", \"type\" : \"string\", \"optional\" : true } ] } }, { \"name\" : \"headline\", \"type\" : \"Label\" }, { \"name\" : \"summary\", \"type\" : \"Label\" } ] } ], \"doc\" : \"The layout model for this particular activity\", \"optional\" : true }, { \"name\" : \"relevanceScore\", \"type\" : \"double\", \"doc\" : \"The score for the particular model\", \"default\" : 0.0 } ] } } }, { \"name\" : \"totalHits\", \"type\" : \"int\", \"doc\" : \"Number of total query hits found.\", \"optional\" : true }, { \"name\" : \"metadata\", \"type\" : { \"type\" : \"record\", \"name\" : \"QueryMetadata\", \"doc\" : \"Generic structure representing facet results\", \"fields\" : [ { \"name\" : \"paginationToken\", \"type\" : \"string\", \"doc\" : \"Pagination token is an MD5 string used to hit cached results for pagination\", \"optional\" : true }, { \"name\" : \"requestId\", \"type\" : \"string\", \"doc\" : \"Federator request id that returned the associated results.\", \"optional\" : true }, { \"name\" : \"facetGroups\", \"type\" : { \"type\" : \"map\", \"values\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"FacetHit\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\" }, { \"name\" : \"count\", \"type\" : \"int\" }, { \"name\" : \"selected\", \"type\" : \"boolean\" } ] } } }, \"doc\" : \"A map from facet name to an array of facet results\", \"default\" : {  } }, { \"name\" : \"timing\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"optional\" : true } ] } } ] }", 
                        "com.linkedin.ucp.Feed": "{ \"type\" : \"record\", \"name\" : \"Feed\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"A feed to be referenced in a UCP application\", \"fields\" : [ { \"name\" : \"urn\", \"type\" : \"string\", \"optional\" : true }, { \"name\" : \"query\", \"type\" : \"string\", \"doc\" : \"BQL string\" }, { \"name\" : \"params\", \"type\" : { \"type\" : \"map\", \"values\" : [ \"string\", { \"type\" : \"array\", \"items\" : \"string\" }, { \"type\" : \"map\", \"values\" : \"string\" } ] }, \"optional\" : true }, { \"name\" : \"querydata\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"optional\" : true }, { \"name\" : \"queryTemplate\", \"type\" : [ { \"type\" : \"record\", \"name\" : \"RecommenderQueryTemplate\", \"doc\" : \"internal model for metadata associated with a query\", \"fields\" : [ { \"name\" : \"serviceName\", \"type\" : \"string\" }, { \"name\" : \"entityResolver\", \"type\" : \"string\", \"doc\" : \"java class name of the resolver that implements com.linkedin.ucp.mixologist.EntityResolver\", \"optional\" : true }, { \"name\" : \"customParams\", \"type\" : { \"type\" : \"record\", \"name\" : \"AnyRecord\", \"namespace\" : \"com.linkedin.common\", \"doc\" : \"Holds a single record together with its type. The in-memory representation is a DataMap with a single entry. The JSON representation is a JSON object. There is a single entry in the DataMap or JSON object. The entry's key is the full name of the value record's schema and the entry's value is the corresponding in-memory or JSON representation of the record's value.\", \"fields\" : [  ], \"avro\" : { \"schema\" : { \"name\" : \"AvroAnyRecord\", \"doc\" : \"The Avro representation is a record with a type field and a value field. The type field provides the full name of the value record's schema. The value field provides the JSON representation of the record's value.\", \"type\" : \"record\", \"fields\" : [ { \"name\" : \"type\", \"doc\" : \"The full name of value record's schema.\", \"type\" : \"string\" }, { \"name\" : \"value\", \"doc\" : \"The value of the record.\", \"type\" : \"string\" } ], \"namespace\" : \"com.linkedin.common.avro\" }, \"translator\" : { \"class\" : \"com.linkedin.common.any.AnyRecordTranslator\" } }, \"java\" : { \"class\" : \"com.linkedin.common.any.AnyRecord\" }, \"validate\" : { \"com.linkedin.common.any.AnyRecordValidator\" : {  } } }, \"optional\" : true } ] }, { \"type\" : \"record\", \"name\" : \"FederatorQueryTemplate\", \"doc\" : \"internal model for metadata associated with a query\", \"fields\" : [ { \"name\" : \"recommenderFeeds\", \"type\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"RecommenderBinding\", \"fields\" : [ { \"name\" : \"queryTemplate\", \"type\" : { \"type\" : \"typeref\", \"name\" : \"Urn\", \"namespace\" : \"com.linkedin.common\", \"ref\" : \"string\", \"java\" : { \"class\" : \"com.linkedin.common.urn.Urn\" } } }, { \"name\" : \"parameterBindings\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" } } ] } }, \"doc\" : \"Array of URNs of recommender feed\" }, { \"name\" : \"requiredTasks\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"list of optional tasks that are required for this model\", \"default\" : [  ], \"optional\" : true }, { \"name\" : \"recommenderPriority\", \"type\" : { \"type\" : \"array\", \"items\" : \"string\" }, \"doc\" : \"List of priority for the recommenders for slotting. Lower index has higher priority. Default slotting would be applied if the list is not provided.\", \"default\" : [  ], \"optional\" : true } ] } ], \"doc\" : \"internal model for metadata associated with a (recommender of federator) query\", \"optional\" : true }, { \"name\" : \"paramTTL\", \"type\" : { \"type\" : \"map\", \"values\" : \"long\" }, \"doc\" : \"A map describing the various TTLs to accept for cached data. Some feeds may be tolerable of stale data and can use this map to describe TTLs for different params. A value of DEFAULT can be specified in the map as a catch-all parameter. The TTL is intended only for querydata but may be expanded at some point for caching decoration\", \"optional\" : true } ], \"version\" : 9 }", 
                        "com.linkedin.ucp.QueryMetadata": "{ \"type\" : \"record\", \"name\" : \"QueryMetadata\", \"namespace\" : \"com.linkedin.ucp\", \"doc\" : \"Generic structure representing facet results\", \"fields\" : [ { \"name\" : \"paginationToken\", \"type\" : \"string\", \"doc\" : \"Pagination token is an MD5 string used to hit cached results for pagination\", \"optional\" : true }, { \"name\" : \"requestId\", \"type\" : \"string\", \"doc\" : \"Federator request id that returned the associated results.\", \"optional\" : true }, { \"name\" : \"facetGroups\", \"type\" : { \"type\" : \"map\", \"values\" : { \"type\" : \"array\", \"items\" : { \"type\" : \"record\", \"name\" : \"FacetHit\", \"fields\" : [ { \"name\" : \"id\", \"type\" : \"string\" }, { \"name\" : \"count\", \"type\" : \"int\" }, { \"name\" : \"selected\", \"type\" : \"boolean\" } ] } } }, \"doc\" : \"A map from facet name to an array of facet results\", \"default\" : {  } }, { \"name\" : \"timing\", \"type\" : { \"type\" : \"map\", \"values\" : \"string\" }, \"optional\" : true } ] }"
                    }, 
                    "path": "/activityViews", 
                    "protocol": "REST", 
                    "resourceSchema": {
                        "collection": {
                            "actions": [
                                {
                                    "name": "clear"
                                }, 
                                {
                                    "doc": "Executes the POSTed Feed as an adhoc query.\n\n TODO: change this to a Finder when restLi supports POSTs to finders.", 
                                    "name": "query", 
                                    "parameters": [
                                        {
                                            "doc": "The adhoc query.", 
                                            "name": "feed", 
                                            "type": "com.linkedin.ucp.Feed"
                                        }, 
                                        {
                                            "default": "member:0", 
                                            "doc": "The ID of the member this feed will be displayed to.", 
                                            "name": "viewerId", 
                                            "type": "string"
                                        }, 
                                        {
                                            "default": "0", 
                                            "doc": "The pagination start. - TODO: switch to PaginationContext when this method is made into a finder.", 
                                            "name": "start", 
                                            "type": "int"
                                        }, 
                                        {
                                            "default": "10", 
                                            "doc": "The pagination count.- TODO: switch to PaginationContext when this method is made into a finder.", 
                                            "name": "count", 
                                            "type": "int"
                                        }, 
                                        {
                                            "default": "", 
                                            "doc": "Optional pagination token from a previous request, overrides pagingContext.", 
                                            "name": "paginationToken", 
                                            "type": "string"
                                        }, 
                                        {
                                            "default": "false", 
                                            "doc": "If true, uses second person grammar (e.g \"You commented on Bruce's post\") instead of 3rd person (\"Alfred commented on Bruce's post\").", 
                                            "name": "useSecondPersonNarrative", 
                                            "type": "boolean"
                                        }, 
                                        {
                                            "doc": "Locale to use when displaying i18n text strings in query response.", 
                                            "name": "locale", 
                                            "optional": true, 
                                            "type": "string"
                                        }, 
                                        {
                                            "default": "false", 
                                            "name": "showTiming", 
                                            "type": "boolean"
                                        }, 
                                        {
                                            "doc": "Indicates number of likes to be returned per activity (max is currently set to 20)", 
                                            "name": "numLikes", 
                                            "optional": true, 
                                            "type": "int"
                                        }, 
                                        {
                                            "doc": "Indicates number of comments to be returned per activity (max is currently set to 10)", 
                                            "name": "numComments", 
                                            "optional": true, 
                                            "type": "int"
                                        }
                                    ], 
                                    "returns": "com.linkedin.ucp.ActivityViewsQueryResult"
                                }
                            ], 
                            "entity": {
                                "path": "/activityViews/{id}"
                            }, 
                            "finders": [
                                {
                                    "doc": "Executes a prepared query using the 'feed' URN provided.", 
                                    "metadata": {
                                        "type": "com.linkedin.ucp.QueryMetadata"
                                    }, 
                                    "name": "feed", 
                                    "parameters": [
                                        {
                                            "name": "id", 
                                            "type": "string"
                                        }, 
                                        {
                                            "default": "member:0", 
                                            "doc": "The ID of the member this feed will be displayed to.", 
                                            "name": "viewerId", 
                                            "type": "string"
                                        }, 
                                        {
                                            "default": "false", 
                                            "doc": "If true, uses second person grammar (e.g \"You commented on Bruce's post\") instead of 3rd person (\"Alfred commented on Bruce's post\").", 
                                            "name": "useSecondPersonNarrative", 
                                            "type": "boolean"
                                        }, 
                                        {
                                            "doc": "Optional pagination token from a previous request, overrides pagingContext.", 
                                            "name": "paginationToken", 
                                            "optional": true, 
                                            "type": "string"
                                        }, 
                                        {
                                            "doc": "Locale to use when displaying i18n text strings in query response.", 
                                            "name": "locale", 
                                            "optional": true, 
                                            "type": "string"
                                        }, 
                                        {
                                            "default": "false", 
                                            "name": "showTiming", 
                                            "type": "boolean"
                                        }, 
                                        {
                                            "doc": "Indicates number of likes to be returned per activity (max is currently set to 20)", 
                                            "name": "numLikes", 
                                            "optional": true, 
                                            "type": "int"
                                        }, 
                                        {
                                            "doc": "Indicates number of comments to be returned per activity (max is currently set to 10)", 
                                            "name": "numComments", 
                                            "optional": true, 
                                            "type": "int"
                                        }
                                    ]
                                }
                            ], 
                            "identifier": {
                                "name": "id", 
                                "type": "string"
                            }, 
                            "methods": [
                                {
                                    "doc": "Get a single activity view from USCP", 
                                    "method": "get", 
                                    "parameters": [
                                        {
                                            "default": "member:0", 
                                            "doc": "URN representing the user viewing activity", 
                                            "name": "viewerId", 
                                            "type": "string"
                                        }, 
                                        {
                                            "doc": "Number of likes to return per activity (max is currently configured to 20)", 
                                            "name": "numLikes", 
                                            "optional": true, 
                                            "type": "int"
                                        }, 
                                        {
                                            "doc": "Number of comments to return per activity (max is currently configured to 10)", 
                                            "name": "numComments", 
                                            "optional": true, 
                                            "type": "int"
                                        }
                                    ]
                                }, 
                                {
                                    "doc": "Get a specifically identified set of activities from USCP", 
                                    "method": "batch_get", 
                                    "parameters": [
                                        {
                                            "default": "member:0", 
                                            "doc": "URN representing the user viewing activity", 
                                            "name": "viewerId", 
                                            "type": "string"
                                        }, 
                                        {
                                            "doc": "Number of likes to return per activity (max is currently configured to 20)", 
                                            "name": "numLikes", 
                                            "optional": true, 
                                            "type": "int"
                                        }, 
                                        {
                                            "doc": "Number of comments to return per activity (max is currently configured to 10)", 
                                            "name": "numComments", 
                                            "optional": true, 
                                            "type": "int"
                                        }
                                    ]
                                }
                            ], 
                            "supports": [
                                "batch_get", 
                                "get"
                            ]
                        }, 
                        "doc": "Feeds query endpoint. Activity published into USCP may be queried back out using either\n prepared queries (aka 'feeds') or adhoc BQL queries against this endpoint.\n\n To execute a prepared query, use the 'feed' finder providing the URN of a feed that has\n been prepared either through the USCP developer application or via the FeedsResource.\n\n To execute a adhoc query, POST a BQL query (including params) to the query action.\n\n Supports get and returns an array of ActivityViews\n\ngenerated from: com.linkedin.ucp.query.rest.ActivityViewsResource", 
                        "name": "activityViews", 
                        "namespace": "com.linkedin.ucp.query.client", 
                        "path": "/activityViews", 
                        "schema": "com.linkedin.ucp.ActivityView"
                    }
                }
            ]
        }
    }
}
