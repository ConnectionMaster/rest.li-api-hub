import sbt._
import sbt.Keys._
import play.Project._
import com.linkedin.sbt._

import scala.xml.transform.RewriteRule

object ApplicationBuild extends Build with restli.All {

  val baseSettings =  super.settings ++ org.sbtidea.SbtIdeaPlugin.settings ++ Seq(
    organization := "com.linkedin.pegasus.gorestli",
    version := "0.0.1",
    resolvers += Resolver.file("Local Ivy Repository", file(Path.userHome + "/.ivy2/local"))(Resolver.ivyStylePatterns),
    resolvers += "Typesafe repository" at "http://repo.typesafe.com/typesafe/releases/"
  )

  val appDependencies = Seq(
    "joda-time" % "joda-time" % "2.1",
    "org.apache.zookeeper" % "zookeeper" % "3.3.4",
    "org.apache.lucene" % "lucene-core" % "4.7.0",
    "org.apache.lucene" % "lucene-analyzers-common" % "4.7.0",
    "org.apache.lucene" % "lucene-queryparser" % "4.7.0",
    "com.linkedin.pegasus" % "restli-common" % "1.13.4",
    "com.linkedin.pegasus" % "restli-client" % "1.13.4",
    "com.linkedin.pegasus" % "restli-server" % "1.13.4",
    "com.linkedin.pegasus" % "restli-docgen" % "1.13.4"
  )

  lazy val main = play.Project("rest-search-frontend", path=file("frontend"))
    .dependsOn(dataTemplates)
    .settings(libraryDependencies ++= appDependencies)
    .settings(baseSettings:_*)


  lazy val dataTemplates = play.Project("rest-search-data-templates", path=file("data-templates"))
    .compilePegasus()
    .settings(libraryDependencies += "com.linkedin.pegasus" % "data" % "1.13.4")
    .settings(baseSettings: _*)

  override lazy val rootProject = Some(main)
}
